{"version":3,"sources":["Components/HeaderBar/PopupChangePassword/PopupChangePassword.js","Components/HeaderBar/HeaderBar.js","Components/Auth/SignIn/PopupForgotPassword/PopupForgotPassword.js","Components/Auth/SignIn/SignIn.js","Components/Auth/SignUp/SignUp.js","Components/Home/SideBar/Category/Category.js","Components/Home/SideBar/SideBar.js","Components/Home/BookSlider/Item/Item.js","Components/Home/BookSlider/BookSlider.js","Components/Home/Home.js","Components/ErrorPage/ErrorPage.js","Components/ResetPassword/ResetPassword.js","Components/Exchange/ItemExchange/ItemExchange.js","Components/Exchange/Exchange.js","Components/Home/SearchBook/SearchBook.js","Components/Home/Shipping/UpdateShippingInfor/UpdateShippingInfor.js","Components/Home/Shipping/Shipping.js","Components/Home/BookDetail/BookDetail.js","Components/Home/ShoppingCart/Calculate/Calculate.js","Components/Home/ShoppingCart/ShoppingCartItem/ShoppingCartItem.js","Components/Home/ShoppingCart/ShoppingCart.js","Components/Exchange/ViewBookExchange/CreateExchangeBook/CreateExchangeBook.js","Components/Exchange/UserBookStorage/UserBookStorage.js","Components/Exchange/ItemPost/ItemPost.js","Components/Exchange/ViewBookExchange/ViewBookExchange.js","Components/Exchange/BookExchangeDetail/InterestedBooksSlider/InterestedBooksSlider.js","Components/Exchange/BookExchangeDetail/PopupChangeBook/PopupChangeBook.js","Components/Exchange/BookExchangeDetail/BookExchangeDetail.js","Components/Exchange/YourBookExchange/ItemOffer/ItemOffer.js","Components/Exchange/YourBookExchange/OffertoYourBook/OffertoYourBook.js","Components/Exchange/YourBookExchange/YourBookExchange.js","Components/App/App.js","serviceWorker.js","index.js","img/shoppingCart.png"],"names":["PopupChangePassword","props","handleClick","toggle","state","errorMessage","hidePass","hidenewPass","hideretypePass","token","changePassword","bind","hideStatePass","hideStatenewPass","hideStateretypePass","values","actions","newPassword","retypePass","fetch","method","headers","this","cookies","get","body","JSON","stringify","oldPassword","then","res","json","success","setState","message","setSubmitting","eye_Pass","faEye","faEyeSlash","eye_newPass","eye_retypePass","className","onClick","initialValues","onSubmit","validationSchema","Yup","min","required","handleSubmit","type","onChange","handleChange","value","name","placeholder","icon","disabled","isSubmitting","Component","HeaderBar","handleKeyDown","e","key","searchBookByName","searchBookName","updateInputValue","evt","target","Cookies","isOpen","logout","togglePopup","seen","provider","auth2","window","gapi","getAuthInstance","undefined","signOut","disconnect","onLogoutSuccess","remove","LoginLogout","to","onKeyDown","src","ShoppingCart","width","height","alt","PopupForgotPassword","forgotPassword","email","SignIn","redirect","loginProvider","login","password","status","text","set","maxAge","httpOnly","user","uid","googleId","Tt","Bd","style","textAlign","touched","errors","cursor","clientId","buttonText","onSuccess","onFailure","console","log","SignUp","signup","fullname","phone","phoneNumber","toString","moreThan","positive","Category","reloadPage","location","reload","key_data","category","toUpperCase","SideBar","onMouseLeave","closeDropdown","onMouseEnter","openDropdown","categories","map","item","_id","Item","categorieID","color","image","author","price","breakPoints","itemsToShow","itemsToScroll","BookSlider","books","data_key","pointer","length","transitionMs","disableArrowsOnEnd","renderArrow","myArrow","book","Home","ErrorPage","ResetPassword","openSuccessMessage","openFailMessage","retypePassword","match","params","tokenId","resetPassword","Alert","variant","onClose","severity","withRouter","ItemExchange","owner","Exchange","tradeqs","posts","post","op","SearchBook","UpdateShippingInfor","updateAddress","updatePhone","address","closeUpdate","Shipping","openUpdateInf","ship","cart","items","total","destination","numbers","alert","BookDetail","isSuccess","element","expel","add","addToShoppingCart","indexOf","shoppingCart","included","index","id","bookId","quant","push","faShoppingCart","Calculate","shipping","totalPrice","totalItem","order","cancelCheckout","ShoppingCartItem","updateItemQuant","deleteBookfromCart","i","splice","defaultValue","faTimes","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","CreateExchangeBook","userBooks","storeBooks","isDisable","loadUserBooks","loadStoreBooks","postTrade","interested","autoComplete","list","Select","labelId","multiple","MenuItem","UserBookStorage","tradedBooks","path","ItemPost","deleteTraderq","deleteOffer","onDeleteSuccess","isOffer","ViewBookExchange","openMessage","uPosts","offerBooks","offers","offerBook","for","InterestedBooksSlider","interested_books","PopupChangeBook","offering","submitOffer","traderq","BookExchangeDetail","postId","ItemOffer","acceptOffer","declineOffer","faCheck","OffertoYourBook","hover","offerring","from","YourBookExchange","App","isLogin","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.73ba6fbc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './PopupChangePassword.css';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nclass PopupChangePassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            hidePass: true,\r\n            hidenewPass:true,\r\n            hideretypePass:true,\r\n            token: '',\r\n        };\r\n        this.changePassword = this.changePassword.bind(this);\r\n        this.hideStatePass = this.hideStatePass.bind(this);\r\n        this.hideStatenewPass = this.hideStatenewPass.bind(this);\r\n        this.hideStateretypePass = this.hideStateretypePass.bind(this);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    \r\n    changePassword(values, actions){\r\n        if(values.newPassword === values.retypePass){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/password', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({oldPassword: values.oldPassword, newPassword: values.newPassword})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if(!json.success){\r\n                    this.setState({errorMessage: json.message});\r\n                    actions.setSubmitting(false);\r\n                } else {\r\n                    this.props.toggle();\r\n                    this.setState({errorMessage: json.message});\r\n                }\r\n            })\r\n        } else {\r\n            actions.setSubmitting(false);\r\n        }\r\n    }\r\n    hideStatePass(){\r\n        const{ hidePass } = this.state;\r\n        if (hidePass){\r\n        this.setState({\r\n            hidePass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hidePass:true\r\n            })\r\n        }\r\n    }\r\n    hideStatenewPass(){\r\n        const{ hidenewPass } = this.state;\r\n        if (hidenewPass){\r\n        this.setState({\r\n            hidenewPass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hidenewPass:true\r\n            })\r\n        }\r\n    }\r\n    hideStateretypePass(){\r\n        const{ hideretypePass } = this.state;\r\n        if (hideretypePass){\r\n        this.setState({\r\n            hideretypePass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hideretypePass:true\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const eye_Pass = this.state.hidePass ? faEye : faEyeSlash;\r\n        const eye_newPass = this.state.hidenewPass ? faEye : faEyeSlash;\r\n        const eye_retypePass = this.state.hideretypePass ? faEye : faEyeSlash;\r\n        return (\r\n            <div className=\"PopupChangePassword\" >\r\n                <div className=\"PopupChangePassword-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                        initialValues={{oldPassword: '', newPassword: '', retypePass: ''}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.changePassword(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            oldPassword: Yup.string()\r\n                                .min(8, 'To short!!!')\r\n                                .required('Điền mật khẩu cũ'),\r\n                            newPassword: Yup.string()\r\n                                .min(8, 'To short!!!')    \r\n                                .required('Điền mật khẩu mới'),\r\n                            retypePass: Yup.string()\r\n                                .min(8, 'To short!!!')\r\n                                .required('Nhập lại mật khẩu mới')\r\n                        })}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Đổi mật khẩu</h2>\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hidePass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.oldPassword}\r\n                                            name=\"oldPassword\"\r\n                                            placeholder=\"Mật khẩu cũ\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_Pass} onClick={this.hideStatePass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hidenewPass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.newPassword}\r\n                                            name=\"newPassword\"\r\n                                            placeholder=\"Mật khẩu mới\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_newPass} onClick={this.hideStatenewPass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hideretypePass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.retypePass}\r\n                                            name=\"retypePass\"\r\n                                            placeholder=\"Xác nhận mật khẩu mới\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_retypePass} onClick={this.hideStateretypePass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Xác nhận\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupChangePassword;","import React, { Component } from 'react';\r\nimport './HeaderBar.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport ShoppingCart from '../../img/shoppingCart.png'\r\nimport PopupChangePassword from './PopupChangePassword/PopupChangePassword'\r\nclass HeaderBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            isOpen: false,\r\n            searchBookName: ''\r\n        };\r\n        this.logout = this.logout.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    logout() {\r\n        \r\n        if(this.state.cookies.get('m_inf_u').provider === 'googel'){\r\n            const auth2 = window.gapi.auth2.getAuthInstance();\r\n            if (auth2 !== undefined|| auth2 !== null) {\r\n                auth2.signOut().then(() => {\r\n                        auth2.disconnect().then(this.props.onLogoutSuccess);\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        this.state.cookies.remove('isLogin');\r\n        this.state.cookies.remove('u_t');\r\n        this.state.cookies.remove('m_inf_u');\r\n        this.props.LoginLogout(false);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.searchBookByName();\r\n        }\r\n    }\r\n\r\n    searchBookByName = () => {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/title/'+this.state.searchBookName)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n            }\r\n        })\r\n    }\r\n\r\n    updateInputValue = (evt) => {\r\n        this.setState({searchBookName: evt.target.value})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (\r\n                <div className=\"header-bbook\">\r\n                    <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                    <Link to='/exchange' className=\"header-item cursor-pointer\">Trao đổi</Link>\r\n                    <Link to='/exchange/viewbook/exchange' className=\"header-item cursor-pointer\">Xem sách đổi </Link>\r\n                    <Link to='/viewbookstorage' className=\"header-item cursor-pointer\">Sách của bạn</Link>\r\n                    <div className=\"signin-signup-layout\">\r\n                    <div className=\"flexbox\">\r\n                        <div className=\"search\">\r\n                            <div>\r\n                                <input value={this.state.searchBookName} onChange={this.updateInputValue} onKeyDown={this.handleKeyDown} type=\"text\" placeholder=\"       Search . . .\" required/>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                            <div className=\"header-item dropdown\">\r\n                                <span className=\"dropbtn\">{this.state.cookies.get('m_inf_u')&&this.state.cookies.get('m_inf_u').name}</span>\r\n                                <div className=\"dropdown-content\">\r\n                                    <div className=\"link cursor-pointer\"onClick={this.togglePopup}>\r\n                                        Đổi mật khẩu\r\n                                    </div>\r\n                                    <div className=\"link\"onClick={this.logout}>Đăng xuất</div>\r\n                                </div>\r\n                            </div>        \r\n                        <div className=\"header-item\">\r\n                            <Link to=\"/shoppingCart\">\r\n                                <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.seen ? <PopupChangePassword cookies={this.state.cookies} toggle={this.togglePopup} /> : null\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"header-bbook\">\r\n                <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                <div className=\"signin-signup-layout\">\r\n                    <Link to='/signin'><div className=\"header-item\">Đăng nhập</div></Link>\r\n                    <Link to='/signup'><div className=\"header-item\">Đăng kí</div></Link>\r\n                    <div className=\"header-item\">\r\n                        <Link to=\"/shoppingCart\">\r\n                            <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderBar;","import React, { Component } from 'react';\r\nimport './PopupForgotPassword.css';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nclass PopupForgotPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n        };\r\n        this.forgotPassword = this.forgotPassword.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    \r\n    forgotPassword(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/forgot', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email})\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            } else {\r\n\r\n                this.setState({errorMessage: json.message});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PopupForgotPassword\" >\r\n                <div className=\"PopupForgotPassword-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                    initialValues={{email: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.forgotPassword(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty')\r\n                    })}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Quên mật khẩu?</h2>\r\n                                    <div>Vui lòng nhập email đăng nhập để lấy lại mật khẩu</div>\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <input className=\"input-email-forgotpass\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Gửi\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupForgotPassword;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignIn.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie'\r\nimport GoogleLogin from 'react-google-login';\r\nimport PopupForgotPassword from './PopupForgotPassword/PopupForgotPassword'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies(),\r\n            seen: false\r\n        };\r\n        this.loginProvider = this.loginProvider.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/email',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 36000000, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    loginProvider(res){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/auth-provider',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                provider: \"google\",\r\n                uid: res.googleId, \r\n                name: res.Tt.Bd})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 86400, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 86400, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 86400, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignIn\">\r\n                <Formik\r\n                    initialValues={{email: '', password: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.login(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty'),\r\n                        password: Yup.string()\r\n                            .min(8, 'To short!!!')\r\n                            .required('Password is empty'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signin-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Nhập</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div style={{textAlign: \"center\"}} className=\"font-white\" >Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-white\" style={{cursor: 'pointer'}} onClick={this.togglePopup}>Quên mật khẩu</div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Nhập\"/>\r\n                                    <GoogleLogin\r\n                                        className=\"btn-google-login\"\r\n                                        //  clientId=\"639654572878-40oqbl8t2cj3dvjv8vj9othe1he9oepv.apps.googleusercontent.com\" //Localhost\r\n                                        clientId=\"473601010653-5nodt0b4a3jsjmd8c3l42v8fgh5fofhe.apps.googleusercontent.com\" //github-pagehost\r\n                                        buttonText=\"LOGIN WITH GOOGLE\"\r\n                                        onSuccess={(res) => this.loginProvider(res)}\r\n                                        onFailure={(res) => {console.log(res)}}\r\n                                    />\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n                {\r\n                    this.state.seen ? <PopupForgotPassword toggle={this.togglePopup} /> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignUp.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.signup = this.signup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    signup(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/register/email-activation',{\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    name: values.fullname, \r\n                    password: values.password,\r\n                    email: values.email,\r\n                    phone: values.phoneNumber.toString(),\r\n                }\r\n            )\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                // this.props.LoginLogout(true);\r\n                // this.setState({redirect: true});\r\n                this.setState({\r\n                    errorMessage:'Kiểm tra Email xác nhận!!!'\r\n                    \r\n                })\r\n                actions.setSubmitting(false);\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignUp\">\r\n                <Formik\r\n                    initialValues={{fullname: '', email: '', password: '',phoneNumber: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.signup(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        fullname: Yup.string()\r\n                            .required('Tên người dùng còn trống'),\r\n                        email: Yup.string()\r\n                            .email('Email không hợp lệ')\r\n                            .required('Email không được để trống'),\r\n                        password: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                        phoneNumber: Yup.number()\r\n                            .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                            .positive('không được có kí tự trong sđt'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signup-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Kí</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Tên Đăng Nhập</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.fullname}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.fullname}\r\n                                            name=\"fullname\"\r\n                                            placeholder=\"Hãy nhập họ và tên\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"email\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Số điện thoại</div>\r\n                                            {props.touched.phoneNumber && props.errors.phoneNumber? (\r\n                                                <div className=\"invalid-message\">{props.errors.phoneNumber}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"tel\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.phoneNumber}\r\n                                            name=\"phoneNumber\"\r\n                                            placeholder=\"0xxxxx\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Kí\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\r\nimport './Category.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Category extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div onClick={this.reloadPage}>\r\n                <Link to={`/search/${this.props.key_data}/books`}>\r\n                    <div className=\"category-item\">\r\n                        {this.props.category.toUpperCase()}\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React, { Component } from 'react';\r\nimport './SideBar.css';\r\nimport Category from './Category/Category';\r\n\r\nclass SideBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SideBar\" onMouseLeave={() => this.closeDropdown()}>\r\n                <div className=\"sidebar-header\"\r\n                    onMouseEnter={() => this.openDropdown()}>\r\n                    TẤT CẢ DANH MỤC\r\n                </div>\r\n                {\r\n                    this.state.isOpen ? (\r\n                        <div className=\"sidebar-body\">\r\n                            {\r\n                                this.props.categories.map(item => (\r\n                                    <Category key={item._id} key_data={item._id} category={item.name}/>\r\n                                ))\r\n                            }\r\n                        </div>  \r\n                    ) : (\r\n                        <div/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport './Item.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"avatar-item\" onClick={this.reloadPage}>\r\n                    <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                        <img className=\"avata-img\" src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"infor-item\">\r\n                    <div onClick={this.reloadPage}>\r\n                        <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                            {this.props.name}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"author\" >\r\n                        {this.props.author}\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.props.price ? ( <div>Giá: {this.props.price && this.props.price}</div>) :(null)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from 'react';\r\nimport './BookSlider.css';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Item from './Item/Item'\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass BookSlider extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/' + this.props.data_key)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            }\r\n            else {\r\n                this.setState({books: json.books});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(this.state.books.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"BookSlider\">\r\n                <div className=\"book-slider-title\">{this.props.categories.toUpperCase()}</div>\r\n                <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                    {\r\n                        this.state.books.map(book => (\r\n                            <Item categorieID={this.props.data_key} key={book._id} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookSlider;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport Cookies from 'universal-cookie';\r\nimport SideBar from './SideBar/SideBar';\r\nimport BookSlider from './BookSlider/BookSlider';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            cookies: new Cookies()\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/category')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({categories: json.categories});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    // logout() {\r\n    //     fetch('/user/logout',{method: 'POST'});\r\n    //     this.state.cookies.remove('mUser');\r\n    //     this.props.LoginLogout(false);\r\n    //     this.setState({redirect: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <SideBar categories={this.state.categories}/>\r\n                <div style={{width: '100%'}}>\r\n                    {\r\n                        this.state.categories.map(item => (\r\n                            <BookSlider key={item._id} data_key={item._id} categories={item.name}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './ErrorPage.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass ErrorPage extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-up-form\">\r\n                <div className=\"message\">404 PAGE NOT FOUND</div>\r\n                <div>\r\n                    <Link to=\"/\"><div className=\"header-item\">RETURN</div></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport './ResetPassword.css';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            openSuccessMessage: false,\r\n            openFailMessage: false\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        \r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    resetPassword(values, actions) {\r\n        if(values.newPassword === values.retypePassword){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/reset/'+this.props.match.params.tokenId,{\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({password: values.newPassword})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if(json.success){\r\n                    this.setState({openSuccessMessage: !this.state.openSuccessMessage})\r\n                } else {\r\n                    this.setState({openFailMessage: !this.state.openFailMessage})\r\n                }\r\n                actions.setSubmitting(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n        return (\r\n            <div className=\"ResetPassword\">\r\n                <Formik\r\n                    initialValues={{newPassword: '', retypePassword: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.resetPassword(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        newPassword: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                        retypePassword: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                    })}>\r\n                    {\r\n                        props => (\r\n                            <form onSubmit={props.handleSubmit} className=\"signup-form\">\r\n                                <h1 className=\"text-white  text-center\">Đặt lại password</h1>\r\n                                <div className=\"form-item\">\r\n                                    <div className=\"form-item-header\">\r\n                                        <div className=\"font-white\">Mật khẩu mới</div>\r\n                                        {props.touched.newPassword && props.errors.newPassword? (\r\n                                            <div className=\"invalid-message\">{props.errors.newPassword}</div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                    <input className=\"form-input\"\r\n                                        type=\"password\"\r\n                                        onChange={props.handleChange}\r\n                                        value={props.values.newPassword}\r\n                                        name=\"newPassword\"\r\n                                        placeholder=\"Hãy nhập mật khẩu mới\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-item\">\r\n                                <div className=\"form-item-header\">\r\n                                        <div className=\"font-white\">Nhập lại mật khẩu</div>\r\n                                        {props.touched.retypePassword && props.errors.retypePassword? (\r\n                                            <div className=\"invalid-message\">{props.errors.retypePassword}</div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                    <input className=\"form-input\"\r\n                                        type=\"password\"\r\n                                        onChange={props.handleChange}\r\n                                        value={props.values.retypePassword}\r\n                                        name=\"retypePassword\"\r\n                                        placeholder=\"Hãy nhập mật khẩu mới\"\r\n                                    />\r\n                                </div>\r\n                                <input disabled={props.isSubmitting} type=\"submit\" value=\"Gửi\"/>\r\n                                {\r\n                                    this.state.openSuccessMessage ? (\r\n                                        <Alert \r\n                                            variant=\"filled\" \r\n                                            className=\"alert\" \r\n                                            onClose={()=>{this.setState({openSuccessMessage: !this.state.openSuccessMessage})}} \r\n                                            severity=\"success\">Đổi mật khẩu thành công</Alert>\r\n                                        ) : (null)\r\n                                }\r\n                                {\r\n                                    this.state.openFailMessage ? (\r\n                                        <Alert \r\n                                            variant=\"filled\" \r\n                                            className=\"alert\" \r\n                                            onClose={()=>{this.setState({openFailMessage: !this.state.openFailMessage})}} \r\n                                            severity=\"error\">Đổi mật khẩu thất bại </Alert>\r\n                                        ) : (null)\r\n                                }\r\n                            </form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPassword);","import React, { Component } from 'react';\r\nimport './ItemExchange.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ItemExchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ItemExchange\">\r\n                <div className=\"avatar-ItemExchange\">\r\n                    <Link to={`/exchange/viewpost/information/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                        <img className=\"avata-img\" src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"infor-ItemExchange\">\r\n                    <div>\r\n                        <Link to={`/exchange/viewpost/information/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                            {this.props.name}\r\n                        </Link>\r\n                    </div>\r\n                    {\r\n                        this.props.owner ? (\r\n                            <div className=\"author\" >\r\n                                Chủ sách: {this.props.owner}\r\n                            </div>\r\n                        ) : (null)\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemExchange;","import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport './Exchange.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ItemExchange from './ItemExchange/ItemExchange';\r\n\r\nclass Exchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            tradeqs: []\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq',{\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.state.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                this.setState({tradeqs: json.posts});\r\n            } else {\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.state.cookies.get('isLogin')){\r\n            return(<Redirect to='/'/>)\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"Exchange\">\r\n                {\r\n                    this.state.tradeqs.map(post => (\r\n                        <div key={post._id} className=\"item-box\">\r\n                            <ItemExchange\r\n                                key_data={post._id} \r\n                                image={post.book&&post.book.image} \r\n                                name={post.book&&post.book.name} \r\n                                owner={post.op.name}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Exchange;","import React, { Component } from 'react';\r\nimport './SearchBook.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Item from '../BookSlider/Item/Item';\r\n\r\nclass SearchBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: []\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/'+this.props.match.params.category)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({books: json.books});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(this.state.books.length === 0){\r\n            return(<div className=\"SearchBook text-white\"> Không có sách </div>);\r\n        }\r\n        \r\n        return (\r\n            <div className=\"SearchBook\">\r\n                {\r\n                    this.state.books.map(book => (\r\n                        <div key={book._id} className=\"item-box\">\r\n                            <Item categorieID={this.props.match.params.category} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchBook);","import React, { Component } from 'react';\r\nimport './UpdateShippingInfor.css';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nclass UpdateShippingInfor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: ''\r\n        };\r\n        this.updateAddress = this.updateAddress.bind(this);\r\n        this.updatePhone = this.updatePhone.bind(this);\r\n    }\r\n    updateAddress(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/address',{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t') \r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    address: values.address,\r\n                }\r\n            )\r\n        })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n            if(json.success){\r\n                this.updatePhone(values, actions);\r\n            }else {\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n    updatePhone(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/numbers',{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    phone: values.phone,\r\n                }\r\n            )\r\n        })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n            if(json.success){\r\n                this.props.cookies.set('m_inf_u', json.user);\r\n                this.props.closeUpdate();\r\n            }else {\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"UpdateShippingInfor\">\r\n                <div className=\"updateShippingInfor-content\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            address: this.props.cookies.get('m_inf_u').address,\r\n                            phone: this.props.cookies.get('m_inf_u').phone}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.updateAddress(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            address: Yup.string()\r\n                                .required('address is empty'),\r\n                            phone: Yup.number()\r\n                                .required('Số điện thoại không được để trống')\r\n                                .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                                .positive('không được có kí tự trong sđt'),\r\n                        })}\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div style={{textAlign: \"center\"}}>Địa chỉ</div>\r\n                                                {props.touched.address && props.errors.address? (\r\n                                                    <div className=\"invalid-message\">{props.errors.address}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input className=\"form-input\"\r\n                                                type=\"text\"\r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.address}\r\n                                                name=\"address\"\r\n                                                placeholder=\"Hãy nhập địa chỉ của bạn\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div>Số điện thoại</div>\r\n                                                {props.touched.phone && props.errors.phone? (\r\n                                                    <div className=\"invalid-message\">{props.errors.phone}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input className=\"form-input\"\r\n                                                type=\"phone\"\r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.phone}\r\n                                                name=\"phone\"\r\n                                                placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Gửi\"/>\r\n                                    </form>\r\n                                )\r\n                            }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateShippingInfor;","import React, { Component } from 'react';\r\nimport './Shipping.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UpdateShippingInfor from './UpdateShippingInfor/UpdateShippingInfor'\r\n\r\nclass Shipping extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n        this.openUpdateInf = this.openUpdateInf.bind(this);\r\n        this.ship = this.ship.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    componentWillUnmount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({cart: this.props.cookies.get('shoppingCart')})\r\n        })\r\n    }\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    ship(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/transaction',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({\r\n                items: this.props.cookies.get('shoppingCart'),\r\n                total:this.props.cookies.get('total'),\r\n                destination: this.props.cookies.get('m_inf_u').address,\r\n                numbers: this.props.cookies.get('m_inf_u').phone\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                this.props.cookies.remove('shoppingCart');\r\n                alert('Đang vận chuyển')\r\n            }\r\n        })\r\n    }\r\n\r\n    openUpdateInf(){\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"Shipping\">\r\n                    <h3 className=\"shipping-title\">ĐỊA CHỈ GIAO HÀNG</h3>\r\n                    <div className=\"shipping-infor\">\r\n                        <h4 className=\"text-white\">{this.props.cookies.get('m_inf_u').name}</h4>\r\n                        <div className=\"text-white\">\r\n                            Địa chỉ: {this.props.cookies.get('m_inf_u').address}\r\n                        </div>\r\n                        <div className=\"text-white\">\r\n                            Số điện thoại: {this.props.cookies.get('m_inf_u').phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-shipping-layout\">\r\n                        <button onClick={this.ship} className=\"btn-shipping\">Giao tới địa chỉ này</button>\r\n                        <button onClick={this.openUpdateInf} className=\"btn-change-address\">Sửa</button>\r\n                    </div>\r\n                    {\r\n                        this.state.isOpen ? (<UpdateShippingInfor closeUpdate={this.openUpdateInf} cookies={this.props.cookies}/>) : (null)\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shipping;","import React, { Component } from 'react';\r\nimport './BookDetail.css';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom';\r\nimport BookSlider  from '../BookSlider/BookSlider'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nclass BookDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isSuccess: false,\r\n            element: 1,\r\n            book: {}\r\n        };\r\n        this.expel = this.expel.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.addToShoppingCart = this.addToShoppingCart.bind(this);\r\n    }\r\n    expel(){\r\n        if(this.state.element-1 > 0){\r\n            this.setState({\r\n                element: this.state.element-1\r\n            });\r\n        }\r\n    }\r\n    add(){\r\n        this.setState({\r\n            element: this.state.element+1\r\n        });\r\n    }\r\n    addToShoppingCart() {\r\n        const {image, name, price}= this.state.book;\r\n        if(!this.props.cookies.get('shoppingCart')){\r\n            let shoppingCart = [{id: this.props.match.params.bookId, \r\n                image: image,\r\n                name: name,\r\n                price: price, \r\n                quant: this.state.element}];\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n        } else {\r\n            let shoppingCart = this.props.cookies.get('shoppingCart');\r\n            let included = false;\r\n            let indexOf;\r\n            shoppingCart.map((item, index) => {\r\n                if(item.id === this.props.match.params.bookId){\r\n                    included = true;\r\n                    indexOf = index;\r\n                }\r\n                return true;\r\n            });\r\n            if(included){\r\n                shoppingCart[indexOf].quant += this.state.element;\r\n            } else {\r\n                shoppingCart.push({id: this.props.match.params.bookId,\r\n                    image: image,\r\n                    name: name, \r\n                    price: price, \r\n                    quant: this.state.element});\r\n            }\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n        }\r\n        this.setState({isSuccess: !this.state.isSuccess});\r\n        \r\n    }\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/title/'+this.props.match.params.bookId)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success) {\r\n                \r\n            } else {\r\n                this.setState({book: json.book});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    \r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"BookDetail\">\r\n                    <div className=\"avatar\">\r\n                        <img src={`https://bbook-backend.herokuapp.com/${this.state.book.image}`} width=\"80%\" height=\"80%\" alt={'BookTitle'}/>\r\n                    </div>\r\n                    <div className=\"book-infor\">\r\n                        <div className=\"book-name text-color-white\">{this.state.book.name}</div>\r\n                        <div className=\"text-color-white author\">Tác giả: {this.state.book.author}</div>\r\n                        <div className=\"text-color-white\">Giá: {this.state.book.price}đ</div>\r\n                        <div className=\"text-color-white\"> Số lượng\r\n                        <div className='groupInput'>\r\n                            <button className=\"btn-expel\" onClick={this.expel}>-</button>\r\n                            <input value={this.state.element} onChange={()=>{}}/>\r\n                            <button className=\"btn-add\" onClick={this.add}>+</button>\r\n                        </div></div>\r\n                        <button className=\"btn-add-to-cart\" onClick={this.addToShoppingCart}>\r\n                            <FontAwesomeIcon icon={faShoppingCart}/>\r\n                            Chọn mua\r\n                        </button>\r\n                        {\r\n                            this.state.isSuccess ? (\r\n                                <Alert variant=\"filled\" className=\"alert\" onClose={()=>{this.setState({isSuccess: !this.state.isSuccess})}} severity=\"success\">Đã thêm sách vào giỏ hàng.\r\n                                <Link to=\"/shoppingCart\" className=\"link\"> Chuyển đến giỏ hàng!\r\n                                </Link>\r\n                                </Alert>\r\n                            ) : (null)\r\n                        }\r\n                    </div>\r\n                    <div className=\"listBook\">\r\n                    <BookSlider data_key={this.props.match.params.categorieID} categories={\"Sách cùng thể loại\"}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BookDetail);","import React, { Component } from 'react';\r\nimport './Calculate.css';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Calculate extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            redirect: false,\r\n            shipping: false,\r\n            totalPrice: 0,\r\n            totalItem: 0,\r\n        };\r\n        this.order = this.order.bind(this);\r\n        this.cancelCheckout = this.cancelCheckout.bind(this);\r\n        this.shipping = this.shipping.bind(this);\r\n    }\r\n    \r\n    order() {\r\n        if(this.props.cookies.get('isLogin')&&this.props.cart&&this.props.cart.length !== 0){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/validate',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({cart: this.props.cart})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let cart=[];\r\n                json.cart.items.map(item => cart.push({\r\n                    id: item.book._id, \r\n                    image: item.book.image, \r\n                    name: item.book.name, \r\n                    price: item.book.price, \r\n                    quant: item.quant\r\n                }));\r\n                this.setState({success: !this.state.success});\r\n                this.props.cookies.set('shoppingCart', cart);\r\n                this.props.cookies.set('total', json.cart.total);\r\n                \r\n            })\r\n        } else {\r\n            this.setState({redirect: true});\r\n        }\r\n    }\r\n\r\n    \r\n    cancelCheckout() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({cart: this.props.cart})\r\n        })\r\n        this.setState({success: false});\r\n    }\r\n\r\n    shipping() {\r\n        this.setState({shipping: true});\r\n    }\r\n    \r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        let totalPrice = 0;\r\n        let totalItem = 0;\r\n        this.props.cart&&this.props.cart.map(item => totalPrice += item.quant*item.price);\r\n        this.props.cart&&this.props.cart.map(item => totalItem += item.quant*1);\r\n        this.setState({totalPrice});\r\n        this.setState({totalItem});\r\n    }\r\n    componentWillUnmount(){\r\n        if(!this.state.shipping){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({cart: this.props.cart})\r\n            })\r\n        }\r\n    }\r\n    // componentWillReceiveProps(){}\r\n\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(this.state.shipping){\r\n            return(<Redirect to='/shipping'/>);\r\n        }\r\n\r\n        if(this.state.success){\r\n            return(\r\n                <div className=\"Calculate\">\r\n                    <div className=\"order\">\r\n                        <button onClick={this.cancelCheckout} className=\"btn-order\">Trở lại</button>\r\n                    </div>\r\n                    <div className=\"order\">\r\n                        <button className=\"btn-order\" onClick={this.shipping}>Xác nhận</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if(this.state.redirect){\r\n            return(<Redirect to='/signin'/>);\r\n        }\r\n        return (\r\n            <div className=\"Calculate\">\r\n                <div className=\"calculated-money\">\r\n                    <div className=\"qua\">\r\n                        Tổng số sản phẩm: {this.state.totalItem}\r\n                    </div>\r\n                    <div className=\"prices-items\">\r\n                        Tạm tính: {this.state.totalPrice}\r\n                    </div>\r\n                    <div className=\"prices-total\">\r\n                        Thành tiền: {this.state.totalPrice}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"order\">\r\n                    <button className=\"btn-order\" onClick={this.order}>Tiến hành đặt hàng</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculate;","import React, { Component } from 'react';\r\nimport './ShoppingCartItem.css';\r\nimport Cookies from 'universal-cookie';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faTimes } from '@fortawesome/free-solid-svg-icons'\r\nclass ShoppingCartItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n        };\r\n        this.updateItemQuant = this.updateItemQuant.bind(this);\r\n        this.deleteBookfromCart = this.deleteBookfromCart.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    updateItemQuant(e){\r\n        const quant = e.target.value;\r\n        if(quant > 0){\r\n            let cart = this.state.cookies.get('shoppingCart');\r\n            for(let i=0;i<cart.length;i++){\r\n                if(cart[i].id === this.props.book.id){\r\n                    cart[i].quant = quant;\r\n                    break;\r\n                }\r\n            }\r\n            this.state.cookies.set('shoppingCart', cart);\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n    deleteBookfromCart(){\r\n        let cart = this.state.cookies.get('shoppingCart');\r\n        for(let i=0;i<cart.length;i++){\r\n            if(cart[i].id === this.props.book.id){\r\n                cart.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.state.cookies.set('shoppingCart', cart);\r\n        window.location.reload(false);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ShoppingCartItem\">\r\n                <div className=\"img\"><img width='100%' height='100%' src={`https://bbook-backend.herokuapp.com/`+this.props.book.image} alt={'booktitle'}/></div>\r\n                <div className=\"nameBook\">{this.props.book.name}</div>\r\n                <div className=\"comboPriceQual\">\r\n                <div className=\"bold\">Số lượng: <input onChange={this.updateItemQuant} min=\"1\" type=\"number\" className=\"input\" defaultValue={this.props.book.quant}/></div>\r\n                <div className=\"bold\">Đơn giá: <span className=\"red\">{this.props.book.price} đ</span> </div>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.deleteBookfromCart} className=\"btn-del\"><FontAwesomeIcon icon={faTimes}/></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCartItem;","import React, { Component } from 'react';\r\nimport './ShoppingCart.css';\r\nimport Calculate from './Calculate/Calculate';\r\nimport ShoppingCartItem from './ShoppingCartItem/ShoppingCartItem';\r\n\r\nclass ShoppingCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cart: this.props.cookies.get('shoppingCart'),\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"ShoppingCart\">\r\n                    <h3 className=\"shopping-cart-title\">GIỎ HÀNG</h3>\r\n                    <div className=\"list-product\">\r\n                        {\r\n                            this.state.cart && this.state.cart.map(item => (\r\n                                <ShoppingCartItem key={item.id} book={item}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <Calculate cookies={this.props.cookies} cart={this.state.cart}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCart;","import React, { Component } from 'react';\r\nimport './CreateExchangeBook.css';\r\nimport * as Yup from 'yup'\r\nimport { Formik } from 'formik';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 500,\r\n        },\r\n    },\r\n};\r\nclass CreateExchangeBook extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userBooks: [],\r\n            storeBooks: [],\r\n            isDisable: false,\r\n            value: [],\r\n            redirect: false,\r\n        };\r\n        this.loadUserBooks = this.loadUserBooks.bind(this);\r\n        this.loadStoreBooks = this.loadStoreBooks.bind(this);\r\n        this.postTrade = this.postTrade.bind(this);\r\n        \r\n    }\r\n    handleChange = (evt) => {\r\n        this.setState({\r\n            value: evt.target.value\r\n        });\r\n    };\r\n    \r\n    \r\n    loadUserBooks() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/books/stash',{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                this.setState({userBooks: json.books.books});\r\n                if(this.state.userBooks.length === 0){\r\n                    this.setState({isDisable: true});\r\n                }\r\n            }\r\n        })\r\n    }\r\n    loadStoreBooks() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book',{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                this.setState({storeBooks: json.books});\r\n            }\r\n        })\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        this.loadUserBooks();\r\n        this.loadStoreBooks();\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    postTrade(values, actions) {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({\r\n                book: values.userBooks,\r\n                interested: this.state.value,\r\n                message: values.message\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                actions.setSubmitting(false);\r\n                this.setState({\r\n                    redirect:true\r\n                })\r\n\r\n            }\r\n            else{\r\n            }\r\n        })\r\n        actions.setSubmitting(false);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n        if(this.state.redirect){\r\n            return (<Redirect to =\"/exchange/viewbook/exchange\"/>)\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"CreateExchangeBook\">\r\n                    <Formik\r\n                        initialValues={{userBooks: '', message: ''}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.postTrade(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            userBooks: Yup.string()\r\n                                .required('Books is empty'),\r\n                        })}\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <form autoComplete=\"off\" onSubmit={props.handleSubmit} className=\"createEx\">\r\n                                        <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng ký đổi sách</h1>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div style={{textAlign: \"center\"}} className=\"font-white\" >Sách để đổi</div>\r\n                                                {props.touched.userBooks && props.errors.userBooks? (\r\n                                                    <div className=\"invalid-message\">{props.errors.userBooks}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input \r\n                                                disabled={this.state.isDisable}\r\n                                                list=\"listUserBooks\" \r\n                                                name=\"userBooks\" \r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.userBooks}/>\r\n                                            <datalist id=\"listUserBooks\">\r\n                                                {\r\n                                                    this.state.userBooks&&this.state.userBooks.map(book => (\r\n                                                        <option key={book._id} value={book._id}>{book.name}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </datalist>\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div className=\"font-white\">Sách muốn đổi</div>\r\n                                            </div>\r\n                                            {/* <input\r\n                                                list=\"listStoreBooks\" \r\n                                                name=\"storeBooks\" \r\n                                                onChange={this.handleChange}\r\n                                                value={this.state.value}\r\n                                                multiple\r\n                                                data-list-filter=\"^\"/>\r\n                                            <datalist id=\"listStoreBooks\">\r\n                                                <select>\r\n                                                {\r\n                                                    this.state.storeBooks&&this.state.storeBooks.map(book => (\r\n                                                        <option key={book._id} value={book.name}/>\r\n                                                    ))\r\n                                                }\r\n                                                </select>\r\n                                            </datalist> */}\r\n                                            <Select\r\n                                                className=\"MultipleSelect\"\r\n                                                labelId=\"demo-mutiple-chip-label\"\r\n                                                id=\"demo-mutiple-chip\"\r\n                                                multiple\r\n                                                value={this.state.value}\r\n                                                onChange={this.handleChange}\r\n                                                MenuProps={MenuProps}\r\n                                                >\r\n                                                {\r\n                                                    this.state.storeBooks.map(book => (\r\n                                                        <MenuItem key={book._id} value={book._id}>\r\n                                                            {book.name}\r\n                                                        </MenuItem>\r\n                                                    ))\r\n                                                }\r\n                                            </Select>\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div className=\"font-white\">Lời nhắn</div>\r\n                                            </div>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                value={props.values.message}\r\n                                                name=\"message\"\r\n                                                onChange={props.handleChange}/>\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng\"/>\r\n                                        \r\n                                    </form>\r\n                                )\r\n                            }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateExchangeBook;","import React, { Component } from 'react';\r\nimport './UserBookStorage.css';\r\nimport Item from '../../Home/BookSlider/Item/Item';\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel from \"react-elastic-carousel\";\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass UserBookStorage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            books: [],\r\n            tradedBooks: [],\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/books/stash', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (json.success) {\r\n                this.setState({books: json.books.books});\r\n            }\r\n        })\r\n        \r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/books/traded', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (json.success) {\r\n                this.setState({tradedBooks: json.books.tradedBooks});\r\n            }\r\n        })\r\n    }\r\n\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.state.cookies.get('isLogin')){\r\n            return(<Redirect path='/'/>)\r\n        }\r\n\r\n        if (this.state.books.length !== 0 || this.state.tradedBooks.length !== 0) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"UserBookStorage\">\r\n                        <div className=\"BookSlider\">\r\n                            <div className=\"book-slider-title\">Sách của bạn</div>\r\n                            {\r\n                                this.state.books.length === 0 ? (null) : (\r\n                                    <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                                        {\r\n                                            this.state.books.map(book => (\r\n                                                <Item \r\n                                                    categorieID={this.props.data_key} \r\n                                                    key={book._id} \r\n                                                    key_data={book._id} \r\n                                                    image={book.image} \r\n                                                    name={book.name} \r\n                                                    author={book.author} />\r\n                                            ))\r\n                                        }\r\n                                    </Carousel>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"BookSlider\">\r\n                            <div className=\"book-slider-title\">Sách hiện đang trao đổi</div>\r\n                            {\r\n                                this.state.tradedBooks.length === 0 ? (null) : (\r\n                                    <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                                        {\r\n                                            this.state.tradedBooks.map(book => (\r\n                                                <Item \r\n                                                    categorieID={this.props.data_key} \r\n                                                    key={book._id} \r\n                                                    key_data={book._id} \r\n                                                    image={book.image} \r\n                                                    name={book.name} \r\n                                                    author={book.author} />\r\n                                            ))\r\n                                        }\r\n                                    </Carousel>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"prompt\">\r\n                    <h1 className=\"message\">Chưa có tựa sách nào trong kho</h1>\r\n                    <Link to='/'>\r\n                        <button className=\"to-buy\">\r\n                            Mua sách\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserBookStorage;","import React, { Component } from 'react';\r\nimport './ItemPost.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ItemPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n        this.deleteTraderq = this.deleteTraderq.bind(this);\r\n        this.deleteOffer = this.deleteOffer.bind(this);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    deleteOffer(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/offer/'+this.props.key_data,{\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success) {\r\n                this.props.onDeleteSuccess();\r\n                window.location.reload(false);\r\n            }\r\n        })\r\n        console.log('delete offer')\r\n    }\r\n    deleteTraderq(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq/'+this.props.key_data,{\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success) {\r\n                this.props.onDeleteSuccess();\r\n                window.location.reload(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"relative-pos\">\r\n                <div className=\"ItemPost\">\r\n                    <div className=\"avatar-ItemPost\">\r\n                        {\r\n                            this.props.isOffer ? (\r\n                                <img className=\"avata-img\" src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                            ) : (\r\n                                <Link to={`/exchange/viewoffer/information/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                                    <img className=\"avata-img\" src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"infor-ItemPost\">\r\n                        <div>\r\n                            {\r\n                                this.props.isOffer ? (\r\n                                    this.props.name\r\n                                ) : (\r\n                                    <Link to={`/exchange/viewoffer/information/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                                        {this.props.name}\r\n                                    </Link>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.props.owner ? (\r\n                                <div className=\"author\" >\r\n                                    Chủ sách: {this.props.owner}\r\n                                </div>\r\n                            ) : (null)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.props.isOffer ? (\r\n                        <button className=\"btn-del-yourbook\" onClick={this.deleteOffer}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </button>\r\n                    ) : (\r\n                        <button className=\"btn-del-yourbook\" onClick={this.deleteTraderq}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </button>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemPost;","import React, { Component } from 'react';\r\nimport './ViewBookExchange.css';\r\nimport { Redirect, Link} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport ItemPost from '../ItemPost/ItemPost';\r\n\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass ViewBookExchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            uPosts: [],\r\n            offerBooks: [],\r\n            message: '',\r\n            openMessage: false,\r\n        };\r\n    }\r\n\r\n    onDeleteSuccess = () => {\r\n        this.setState({openMessage: true});\r\n    }\r\n\r\n    componentWillMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq/user', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (json.success) {\r\n                this.setState({uPosts: json.posts});\r\n            } \r\n        })\r\n        \r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/offer/sent', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (json.success) {\r\n                this.setState({offerBooks: json.offers});\r\n            }\r\n        })\r\n    }\r\n\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    componentDidUpdate(){\r\n        // fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq/user', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'x-access-token': this.props.cookies.get('u_t')\r\n        //     }\r\n        // })\r\n        // .then(res => res.json())\r\n        // .then(json => {\r\n        //     if (json.success) {\r\n        //         this.setState({uPosts: json.posts});\r\n        //     } \r\n        // })\r\n\r\n        // fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/offer/sent', {\r\n        //     method: 'GET',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'x-access-token': this.props.cookies.get('u_t')\r\n        //     }\r\n        // })\r\n        // .then(res => res.json())\r\n        // .then(json => {\r\n        //     if (json.success) {\r\n        //         this.setState({offerBooks: json.offers});\r\n        //         console.log(this.state.offerBooks)\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.cookies.get('isLogin')){\r\n            return(<Redirect path='/'/>)\r\n        }\r\n\r\n        if (this.state.uPosts.length !== 0 || this.state.offerBooks !== 0) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"UserBookStorage\">\r\n                    <Link  className=\"post-trade-book\"to=\"/exchange/create/book\">Đăng ký đổi sách</Link>\r\n                    {\r\n                        this.state.openMessage ? (\r\n                            <Alert \r\n                                variant=\"filled\" \r\n                                className=\"alert\" \r\n                                onClose={()=>{this.setState({openMessage: false})}} \r\n                                severity=\"success\">\r\n                                    Xóa thành công\r\n                            </Alert>\r\n                        ) : (null)\r\n                            \r\n                    }\r\n                        <div className=\"BookSlider\">\r\n                            <div className=\"book-slider-title\">Sách đổi của bạn</div>\r\n                            {\r\n                                \r\n                                this.state.uPosts.length === 0 ? (null) : (\r\n                                    <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                                        {\r\n                                            this.state.uPosts.map(post => (\r\n                                                <ItemPost\r\n                                                    onDeleteSuccess={this.onDeleteSuccess}\r\n                                                    cookies={this.state.cookies}\r\n                                                    key={post._id}\r\n                                                    key_data={post._id} \r\n                                                    image={post.book&&post.book.image} \r\n                                                    name={post.book&&post.book.name} \r\n                                                    owner={post.op.name}/>\r\n                                            ))\r\n                                        }\r\n                                    </Carousel>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"BookSlider\">\r\n                            <div className=\"book-slider-title\">Yêu cầu bạn đang gửi</div>\r\n                            {\r\n                                this.state.offerBooks.length === 0 ? (null) : (\r\n                                    <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                                        {\r\n                                            this.state.offerBooks.map(offerBook => (\r\n                                                <ItemPost\r\n                                                    onDeleteSuccess={this.onDeleteSuccess}\r\n                                                    isOffer={true}\r\n                                                    categorieID={this.props.data_key} \r\n                                                    cookies={this.state.cookies}\r\n                                                    key={offerBook._id}\r\n                                                    key_data={offerBook._id} \r\n                                                    image={offerBook.for&&offerBook.for.image} \r\n                                                    name={offerBook.for&&offerBook.for.name} \r\n                                                    owner={offerBook.to&&offerBook.to.name}/>\r\n                                            ))\r\n                                        }\r\n                                    </Carousel>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"prompt\">\r\n                    <h1 className=\"message\">Chưa có sách nào trao đổi</h1>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default ViewBookExchange;","import React, { Component } from 'react';\r\nimport './InterestedBooksSlider.css';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Item from '../../../Home/BookSlider/Item/Item';\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass InterestedBooksSlider extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"BookSlider\">\r\n                <div className=\"book-slider-title\">Sách {this.props.op} muốn được đổi</div>\r\n                <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                    {\r\n                        this.props.interested_books.map(book => (\r\n                            <Item \r\n                                categorieID={book.categories[0]} \r\n                                key={book._id} \r\n                                key_data={book._id} \r\n                                image={book.image} \r\n                                name={book.name} \r\n                                author={book.author}/>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InterestedBooksSlider;","import React, { Component } from 'react';\r\nimport './PopupChangeBook.css';\r\nimport {Formik} from 'formik';\r\n\r\nclass PopupChangeBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            token: '',\r\n            books: [],\r\n            offering: ''\r\n        };\r\n\r\n    }\r\n\r\n    // componentWillMount() {\r\n        \r\n    // }\r\n\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/books/stash', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (json.success) {\r\n                this.setState({books: json.books.books});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    handleChange = (evt) => {\r\n        this.setState({\r\n            offering: evt.target.value\r\n        });\r\n    };\r\n\r\n    submitOffer = (values, actions) => {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/offer', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({\r\n                to:  this.props.traderq.op._id,\r\n                for: this.props.traderq.book._id,\r\n                offering: values.books,\r\n                post: this.props.traderq._id,\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if (json.success) {\r\n                actions.setSubmitting(false);\r\n                this.setState({errorMessage: 'Đã gửi yêu cầu'});\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"PopupChangeBook\" >\r\n                <div className=\"PopupChangeBook-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                        initialValues={{books: ''}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.submitOffer(values, actions);\r\n                        }}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Chọn sách của bạn</h2>\r\n                                    <form autoComplete=\"off\" onSubmit={props.handleSubmit} className=\"select-book-exchange\">\r\n                                        <div className=\"inline\">\r\n                                        <input\r\n                                            disabled={this.state.isDisable}\r\n                                            list=\"listUserBooks\" \r\n                                            name=\"books\" \r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.books}/>\r\n                                        <datalist id=\"listUserBooks\">\r\n                                            {\r\n                                                this.state.books && this.state.books.map(book => (\r\n                                                    <option\r\n                                                        key={book._id}\r\n                                                        value={book._id}> {book.name} </option>\r\n                                                ))\r\n                                            }\r\n                                        </datalist>\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Xác nhận\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupChangeBook;","import React, { Component } from 'react';\r\nimport './BookExchangeDetail.css';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport InterestedBooksSlider from './InterestedBooksSlider/InterestedBooksSlider';\r\nimport PopupChangeBook from './PopupChangeBook/PopupChangeBook';\r\n\r\n\r\nclass BookExchangeDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            traderq: {},\r\n            interested: []\r\n        };\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n    componentWillMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq/'+this.props.match.params.postId,{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success) {\r\n                this.setState({traderq: json.traderq});\r\n                this.setState({interested: json.traderq.interested})\r\n            }\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    \r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"BookExchangeDetail\">\r\n                    <div className=\"avatar\">\r\n                        <img src={`https://bbook-backend.herokuapp.com/${this.state.traderq.book&&this.state.traderq.book.image}`} width=\"80%\" height=\"80%\" alt={'BookTitle'}/>\r\n                    </div>\r\n                    <div className=\"book-infor\">\r\n                        <div className=\"book-name text-color-white\">{this.state.traderq.book&&this.state.traderq.book.name}</div>\r\n                        <div className=\"text-color-white author\">Chủ sách: {this.state.traderq.op&&this.state.traderq.op.name}</div>\r\n                        <div className=\"text-white margin-bottom-5\">{this.state.traderq.message}</div>\r\n                        <button className=\"btn-add-to-cart\" onClick={this.togglePopup}>\r\n                            Trao đổi\r\n                        </button>\r\n                        {\r\n                            this.state.seen ? <PopupChangeBook \r\n                                                cookies={this.props.cookies} \r\n                                                toggle={this.togglePopup} \r\n                                                traderq={this.state.traderq}/> : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"listBook\">\r\n                        <InterestedBooksSlider op={this.state.traderq.op&&this.state.traderq.op.name} interested_books={this.state.interested}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BookExchangeDetail);","import React, { Component } from 'react';\r\nimport './ItemOffer.css';\r\nimport Cookies from 'universal-cookie';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ItemOffer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies()\r\n        };\r\n        this.acceptOffer = this.acceptOffer.bind(this);\r\n        this.declineOffer = this.declineOffer.bind(this);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    acceptOffer(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/offer/accept/'+this.props.key_data,{\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.state.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                alert('Đã chấp nhận đề nghị');\r\n                window.location.reload(false);\r\n            }\r\n        })\r\n    }\r\n    declineOffer(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/offer/decline/'+this.props.key_data,{\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.state.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                alert('Đã từ chối đề nghị');\r\n                window.location.reload(false);\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"relative-pos\">\r\n                <div className=\"ItemOffer\">\r\n                    <div className=\"avatar-ItemOffer\">\r\n                        <img className=\"avata-img\" src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                    </div>\r\n                    <div className=\"infor-ItemOffer\">\r\n                        <div>\r\n                            {this.props.name}\r\n                        </div>\r\n                        {\r\n                            this.props.author ? (\r\n                                <div className=\"author\" >\r\n                                    Chủ sách: {this.props.author}\r\n                                </div>\r\n                            ) : (null)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn-del-offer\" onClick={this.declineOffer}>\r\n                    <FontAwesomeIcon icon={faTimes}/>\r\n                </button>\r\n                <button className=\"btn-check-offer\" onClick={this.acceptOffer}>\r\n                    <FontAwesomeIcon icon={faCheck}/>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemOffer;","import React, { Component } from 'react';\r\nimport './OffertoYourBook.css';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport ItemOffer from '../ItemOffer/ItemOffer';\r\nimport Alert from '@material-ui/lab/Alert';\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass OffertoYourBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hover:false,\r\n            openMessage:false,\r\n        };\r\n    }\r\n    // componentWillMount(){}\r\n    componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"BookSlider\">\r\n                <div className=\"book-slider-title\">Yêu cầu gửi tới bạn</div>\r\n                {\r\n                    this.state.openMessage ? (\r\n                        <Alert \r\n                            variant=\"filled\" \r\n                            className=\"alert\" \r\n                            onClose={()=>{this.setState({openMessage: false})}} \r\n                            severity=\"success\">\r\n                                Xóa thành công\r\n                        </Alert>\r\n                    ) : (null)\r\n                        \r\n                }\r\n                {\r\n                    this.props.offerring.length === 0 ? (null) : (\r\n                        <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                            {\r\n                                this.props.offerring.map(offerBook => (\r\n                                    <ItemOffer \r\n                                        key={offerBook._id} \r\n                                        key_data={offerBook._id} \r\n                                        image={offerBook.offering.image} \r\n                                        name={offerBook.offering.name} \r\n                                        author={offerBook.from.name}/>\r\n                                ))\r\n                            }\r\n                        </Carousel>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OffertoYourBook;","import React, { Component } from 'react';\r\nimport './YourBookExchange.css';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport OffertoYourBook from './OffertoYourBook/OffertoYourBook';\r\n\r\n\r\nclass YourBookExchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            traderq: {},\r\n            offerring: []\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq/'+this.props.match.params.postId,{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success) {\r\n                this.setState({traderq: json.traderq});\r\n                this.setState({offerring: json.traderq.offers});\r\n            }\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        \r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    \r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"YourBookExchange\">\r\n                    <div className=\"avatar\">\r\n                        <img src={`https://bbook-backend.herokuapp.com/${this.state.traderq.book&&this.state.traderq.book.image}`} width=\"80%\" height=\"80%\" alt={'BookTitle'}/>\r\n                    </div>\r\n                    <div className=\"book-infor\">\r\n                        <div className=\"book-name text-color-white\">{this.state.traderq.book&&this.state.traderq.book.name}</div>\r\n                        <div className=\"text-color-white author\">Chủ sách: {this.state.traderq.op&&this.state.traderq.op.name}</div>\r\n                        <div className=\"text-white margin-bottom-5\">{this.state.traderq.message}</div>\r\n                        \r\n                    </div>\r\n                    <div className=\"listBook\">\r\n                        <OffertoYourBook op={this.state.traderq.op&&this.state.traderq.op.name} offerring={this.state.offerring}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(YourBookExchange);","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from '../HeaderBar/HeaderBar';\r\nimport SignIn from '../Auth/SignIn/SignIn';\r\nimport {\r\n    HashRouter,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport SignUp from '../Auth/SignUp/SignUp';\r\nimport Home from '../Home/Home';\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\nimport ResetPassword from '../ResetPassword/ResetPassword'\r\nimport Exchange from '../Exchange/Exchange';\r\nimport SearchBook from '../Home/SearchBook/SearchBook';\r\nimport SideBar from '../Home/SideBar/SideBar';\r\nimport Shipping from '../Home/Shipping/Shipping';\r\nimport BookDetail from '../Home/BookDetail/BookDetail';\r\nimport ShoppingCart from '../Home/ShoppingCart/ShoppingCart';\r\nimport CreateExchangeBook from '../Exchange/ViewBookExchange/CreateExchangeBook/CreateExchangeBook';\r\nimport UserBookStorage from '../Exchange/UserBookStorage/UserBookStorage'\r\nimport ViewBookExchange from '../Exchange/ViewBookExchange/ViewBookExchange';\r\nimport BookExchangeDetail from '../Exchange/BookExchangeDetail/BookExchangeDetail';\r\nimport YourBookExchange from '../Exchange/YourBookExchange/YourBookExchange';\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            isLogin: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.LoginLogout = this.LoginLogout.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/category')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({categories: json.categories});\r\n        })\r\n    }\r\n\r\n    LoginLogout(isLogin) {\r\n        this.setState({isLogin});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"background-image\">\r\n                    <div className=\"background-content\">\r\n                        <HashRouter>\r\n                            <HeaderBar LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                            <Switch>\r\n                                <Route exact path='/signin' >\r\n                                    <SignIn LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/signup'>\r\n                                    <SignUp LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/reset/:tokenId'>\r\n                                    <ResetPassword cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/exchange'>\r\n                                    <Exchange/>\r\n                                </Route>\r\n                                <Route exact path='/shoppingCart'>\r\n                                    <ShoppingCart cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path=\"/:categorieID/:bookId\">\r\n                                    <BookDetail cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path=\"/shipping\">\r\n                                    <Shipping cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/search/:category/books'>\r\n                                    <div className='container'>\r\n                                        <SideBar categories={this.state.categories}/>\r\n                                        <SearchBook/>\r\n                                    </div>\r\n                                </Route>\r\n                                <Route exact path='/exchange/viewbook/exchange'>\r\n                                    <ViewBookExchange cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/exchange/create/book'>\r\n                                    <CreateExchangeBook cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/viewbookstorage'>\r\n                                    <UserBookStorage cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/exchange/viewpost/information/:postId'>\r\n                                    <BookExchangeDetail cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/exchange/viewoffer/information/:postId'>\r\n                                    <YourBookExchange cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/'>\r\n                                    <Home/>\r\n                                </Route>\r\n                                <Route component={ErrorPage}/>\r\n                            </Switch>\r\n                        </HashRouter>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/shoppingCart.891cbcab.png\";"],"sourceRoot":""}