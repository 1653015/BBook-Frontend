{"version":3,"sources":["Components/HeaderBar/HeaderBar.js","Components/SignIn/SignIn.js","Components/SignUp/SignUp.js","Components/Home/Home.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["HeaderBar","className","to","process","Component","SignIn","props","state","errorMessage","initialValues","email","password","onSubmit","values","actions","fetch","method","headers","body","JSON","stringify","login_id","then","res","status","text","setState","setSubmitting","validationSchema","Yup","required","min","max","handleSubmit","style","textAlign","touched","errors","type","onChange","handleChange","value","name","disabled","isSubmitting","SignUp","fullname","Home","color","position","top","width","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f176657b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './HeaderBar.css';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nclass HeaderBar extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header-bbook\">\r\n                <Link to={process.env.PUBLIC_URL + '/'} className=\"bbook-logo\">BBOOK</Link>\r\n                <div className=\"signin-signup-layout\">\r\n                    <Link to={process.env.PUBLIC_URL + '/signin'}><div className=\"header-item\">Đăng nhập</div></Link>\r\n                    <Link to={process.env.PUBLIC_URL + '/signup'}><div className=\"header-item\">Đăng kí</div></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderBar;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignIn.css';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: ''\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SignIn\">\r\n                <Formik\r\n                    initialValues={{email: '', password: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/signin',{\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify({login_id: values.email, password: values.password})\r\n                        })\r\n                        .then(res => {\r\n                            if(res.status === 400) {\r\n                                res.text().then(text => this.setState({errorMessage: text}));\r\n                                actions.setSubmitting(false);\r\n                            } else if (res.status === 200) {\r\n                                this.setState({errorMessage: 'Đăng nhập thành công!!!'});\r\n                                actions.setSubmitting(false);\r\n                            } else {\r\n                                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                                actions.setSubmitting(false);\r\n                            }\r\n                        })\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty'),\r\n                        password: Yup.string()\r\n                            .min(8, 'To short!!!')\r\n                            .max(50, 'To long!!!')\r\n                            .required('Password is empty'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"sign-in-up-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Nhập</h1>\r\n\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div style={{textAlign: \"center\"}} className=\"font-white\">Email (Tên Đăng Nhập)</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Nhập\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignUp.css';\r\n\r\nclass SignUp extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SignUp\">\r\n                <Formik\r\n                    initialValues={{fullname: '', email: '', password: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        actions.setSubmitting(false);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        fullname: Yup.string()\r\n                            .required('Your name is empty'),\r\n                        email: Yup.string()\r\n                            .email('Invalid email address')\r\n                            .required('Email is empty'),\r\n                        password: Yup.string()\r\n                            .min(8, 'To short!!!')\r\n                            .max(50, 'To long!!!')\r\n                            .required('Password is empty'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"sign-in-up-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Kí</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Tên Đăng Nhập</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.fullname}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.fullname}\r\n                                            name=\"fullname\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"email\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                        />\r\n                                    </div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Kí\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div style={{color: \"white\", textAlign: \"center\", position: \"absolute\", top: \"68px\", width: \"100%\"}}>\r\n                THIS IS MADNESS\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './App.css';\r\nimport HeaderBar from '../HeaderBar/HeaderBar';\r\nimport SignIn from '../SignIn/SignIn';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport SignUp from '../SignUp/SignUp';\r\nimport Home from '../Home/Home';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"background-image\"></div>\r\n            <div className=\"background-content\">\r\n                <Router>\r\n                    <HeaderBar/>\r\n                    <Switch>\r\n                        <Route path={process.env.PUBLIC_URL + '/signin'} >\r\n                            <SignIn/>\r\n                        </Route>\r\n                        <Route path={process.env.PUBLIC_URL + '/signup'}>\r\n                            <SignUp/>\r\n                        </Route>\r\n                        <Route path={process.env.PUBLIC_URL + '/'}>\r\n                            <Home/>\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}