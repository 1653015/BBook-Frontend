{"version":3,"sources":["Components/HeaderBar/HeaderBar.js","Components/Auth/SignIn/SignIn.js","Components/Auth/SignUp/SignUp.js","Components/Home/SideBar/SideBar.js","Components/Home/Home.js","Components/ErrorPage/ErrorPage.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["HeaderBar","props","state","cookies","Cookies","logout","bind","fetch","method","this","remove","LoginLogout","isLogin","get","className","to","type","onClick","Component","SignIn","errorMessage","redirect","login","values","actions","headers","body","JSON","stringify","email","password","then","res","status","text","setState","setSubmitting","initialValues","onSubmit","validationSchema","Yup","required","min","max","handleSubmit","style","textAlign","touched","errors","onChange","handleChange","value","name","placeholder","disabled","isSubmitting","SignUp","signup","fullname","phoneNumber","moreThan","positive","SideBar","isOpen","onMouseLeave","closeDropdown","onMouseEnter","openDropdown","Home","ErrorPage","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6fe44daa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './HeaderBar.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass HeaderBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n        };\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    logout() {\r\n        fetch('/user/logout',{method: 'POST'});\r\n        this.state.cookies.remove('mUser');\r\n        this.props.LoginLogout(false);\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isLogin || this.state.cookies.get('mUser')){\r\n            return (\r\n                <div className=\"header-bbook\">\r\n                <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                <div className=\"header-item\">Mua Sách</div>\r\n                <div className=\"header-item\">Trao đổi</div>\r\n                <div className=\"signin-signup-layout\">\r\n                    <div className=\"header-item\">\r\n                        {this.state.cookies.get('mUser')}\r\n                    </div>\r\n                    <div className=\"header-item\">\r\n                        <button type=\"button\" onClick={this.logout} className=\"btn-logout\">Logout</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"header-bbook\">\r\n                <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                <div className=\"signin-signup-layout\">\r\n                    <Link to='/signin'><div className=\"header-item\">Đăng nhập</div></Link>\r\n                    <Link to='/signup'><div className=\"header-item\">Đăng kí</div></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderBar;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignIn.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies(),\r\n        };\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/signin',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                this.props.LoginLogout(true);\r\n                this.setState({redirect: true});\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('mUser')) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignIn\">\r\n                <Formik\r\n                    initialValues={{email: '', password: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.login(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty'),\r\n                        password: Yup.string()\r\n                            .min(8, 'To short!!!')\r\n                            .max(50, 'To long!!!')\r\n                            .required('Password is empty'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signin-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Nhập</h1>\r\n\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div style={{textAlign: \"center\"}} className=\"font-white\" >Email (Tên Đăng Nhập)</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Nhập\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignUp.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.signup = this.signup.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/signin',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                this.props.LoginLogout(true);\r\n                this.setState({redirect: true});\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    signup(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/register/email',{\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    name: values.fullname, \r\n                    password: values.password,\r\n                    email: values.email\r\n                }\r\n            )\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                // this.props.LoginLogout(true);\r\n                // this.setState({redirect: true});\r\n                this.login(values, actions);\r\n                \r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('mUser')){\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignUp\">\r\n                <Formik\r\n                    initialValues={{fullname: '', email: '', password: '',phoneNumber: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.signup(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        fullname: Yup.string()\r\n                            .required('Tên người dùng còn trống'),\r\n                        email: Yup.string()\r\n                            .email('Email không hợp lệ')\r\n                            .required('Email không được để trống'),\r\n                        password: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                        phoneNumber: Yup.number()\r\n                            .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                            .positive('không được có kí tự trong sđt'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signup-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Kí</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Tên Đăng Nhập</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.fullname}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.fullname}\r\n                                            name=\"fullname\"\r\n                                            placeholder=\"Hãy nhập họ và tên\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"email\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Số điện thoại</div>\r\n                                            {props.touched.phoneNumber && props.errors.phoneNumber? (\r\n                                                <div className=\"invalid-message\">{props.errors.phoneNumber}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"number\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.phoneNumber}\r\n                                            name=\"phoneNumber\"\r\n                                            placeholder=\"0xxxxx\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Kí\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport './SideBar.css';\r\n\r\nclass SideBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        //load data\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SideBar\" onMouseLeave={() => this.closeDropdown()}>\r\n                <div className=\"sidebar-header\"\r\n                    onMouseEnter={() => this.openDropdown()}>\r\n                    TẤT CẢ DANH MỤC\r\n                </div>\r\n                {\r\n                    this.state.isOpen ? (\r\n                        <div className=\"sidebar-body\">\r\n                            wont display body when header is not hover\r\n                            display something when header is hover\r\n                        </div>  \r\n                    ) : (\r\n                        <div/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport Cookies from 'universal-cookie';\r\nimport SideBar from './SideBar/SideBar';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            cookies: new Cookies()\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        if(this.state.cookies.get('mUser')){\r\n            this.setState({redirect: false});\r\n        } else {\r\n            this.setState({redirect: true});\r\n        }\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    // logout() {\r\n    //     fetch('/user/logout',{method: 'POST'});\r\n    //     this.state.cookies.remove('mUser');\r\n    //     this.props.LoginLogout(false);\r\n    //     this.setState({redirect: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <SideBar/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './ErrorPage.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass ErrorPage extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-up-form\">\r\n                <div className=\"message\">404 PAGE NOT FOUND</div>\r\n                <div>\r\n                    <Link to=\"/\"><div className=\"header-item\">RETURN</div></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from '../HeaderBar/HeaderBar';\r\nimport SignIn from '../Auth/SignIn/SignIn';\r\nimport {\r\n    HashRouter,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport SignUp from '../Auth/SignUp/SignUp';\r\nimport Home from '../Home/Home';\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLogin: false,\r\n            cookies: new Cookies(),\r\n        };\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount(){\r\n        if(this.state.cookies.get('userToken')){\r\n            this.setState({isLogin: true});\r\n        }\r\n        else {\r\n            this.setState({isLogin: false});\r\n        }\r\n    }\r\n\r\n    LoginLogout(isLogin) {\r\n        this.setState({isLogin});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"background-image\">\r\n                    <div className=\"background-content\">\r\n                        <HashRouter>\r\n                            <HeaderBar isLogin={this.state.isLogin} LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                            <Switch>\r\n                                <Route exact path='/signin' >\r\n                                    <SignIn LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/signup'>\r\n                                    <SignUp LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/'>\r\n                                    <Home/>\r\n                                </Route>\r\n                                <Route>\r\n                                    <ErrorPage/>\r\n                                </Route>\r\n                            </Switch>\r\n                        </HashRouter>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}