{"version":3,"sources":["Components/HeaderBar/HeaderBar.js","Components/Auth/SignIn/PopupForgotPassword/PopupForgotPassword.js","Components/Auth/SignIn/SignIn.js","Components/Auth/SignUp/SignUp.js","Components/Home/SideBar/Category/Category.js","Components/Home/SideBar/SideBar.js","Components/Home/BookSlider/Item/Item.js","Components/Home/BookSlider/BookSlider.js","Components/Home/ShoppingCart/Calculate/Calculate.js","Components/Home/ShoppingCart/ShoppingCartItem/ShoppingCartItem.js","Components/Home/ShoppingCart/ShoppingCart.js","Components/Home/BookDetail/BookDetail.js","Components/Home/Shipping/Shipping.js","Components/Home/SearchBook/SearchBook.js","Components/Home/Home.js","Components/ErrorPage/ErrorPage.js","Components/ResetPassword/ResetPassword.js","Components/Exchange/Exchange.js","Components/App/App.js","serviceWorker.js","index.js","img/shoppingCart.png"],"names":["HeaderBar","props","state","cookies","Cookies","isOpen","logout","bind","this","setState","fetch","method","remove","LoginLogout","get","className","to","type","placeholder","required","onClick","src","ShoppingCart","width","height","alt","Component","PopupForgotPassword","handleClick","toggle","errorMessage","forgotPassword","values","actions","headers","body","JSON","stringify","email","then","res","json","success","message","initialValues","onSubmit","validationSchema","Yup","handleSubmit","onChange","handleChange","value","name","disabled","isSubmitting","SignIn","redirect","seen","login","togglePopup","password","status","text","setSubmitting","set","maxAge","httpOnly","min","max","style","textAlign","touched","errors","cursor","clientId","buttonText","onSuccess","onFailure","console","log","SignUp","signup","fullname","phoneNumber","moreThan","positive","Category","key_data","category","toUpperCase","SideBar","onMouseLeave","closeDropdown","onMouseEnter","openDropdown","categories","map","item","key","_id","Item","reloadPage","window","location","reload","categorieID","color","image","author","price","breakPoints","itemsToShow","itemsToScroll","BookSlider","books","data_key","pointer","length","transitionMs","disableArrowsOnEnd","renderArrow","myArrow","book","Calculate","shipping","totalPrice","order","cancelCheckout","cart","total","quant","ShoppingCartItem","id","BookDetail","isSuccess","element","expel","add","addToShoppingCart","indexOf","shoppingCart","included","index","match","params","bookId","push","icon","faShoppingCart","Alert","variant","onClose","severity","withRouter","Shipping","SearchBook","Home","exact","path","ErrorPage","ResetPassword","tokenId","Exchange","App","isLogin","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.71600666.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './HeaderBar.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport ShoppingCart from '../../img/shoppingCart.png'\r\n\r\nclass HeaderBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            isOpen: false\r\n        };\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    logout() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/signout',{method: 'POST'});\r\n        // const auth2 = window.gapi.auth2.getAuthInstance();\r\n        // if (auth2 != undefined|| auth2 != null) {\r\n        //     auth2.signOut().then(() => {\r\n        //             auth2.disconnect().then(this.props.onLogoutSuccess);\r\n        //         }\r\n        //     )\r\n        // }\r\n        this.state.cookies.remove('isLogin');\r\n        this.props.LoginLogout(false);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (\r\n                <div className=\"header-bbook\">\r\n                    <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                    <Link to='/exchange' className=\"header-item cursor-pointer\">Trao đổi</Link>\r\n                    <div className=\"signin-signup-layout\">\r\n                    <div className=\"flexbox\">\r\n                        <div className=\"search\">\r\n                            <div>\r\n                            <input type=\"text\" placeholder=\"       Search . . .\" required/>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                            <div className=\"header-item dropdown\">\r\n                                <span className=\"dropbtn\">User Name</span>\r\n                                <div className=\"dropdown-content\">\r\n                                    <Link to=\"/profile\" className=\"link\">Trang Cá Nhân</Link>\r\n                                    <div className=\"link\">\r\n                                    <button type=\"button\" onClick={this.logout} className=\"btn-logout\">Đăng xuất</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>        \r\n                        <div className=\"header-item\">\r\n                            <Link to=\"/shoppingCart\">\r\n                                <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"header-bbook\">\r\n                <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                <div className=\"signin-signup-layout\">\r\n                    <Link to='/signin'><div className=\"header-item\">Đăng nhập</div></Link>\r\n                    <Link to='/signup'><div className=\"header-item\">Đăng kí</div></Link>\r\n                    <div className=\"header-item\">\r\n                        <Link to=\"/shoppingCart\">\r\n                            <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderBar;","import React, { Component } from 'react';\r\nimport './PopupForgotPassword.css';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nclass PopupForgotPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n        };\r\n        this.forgotPassword = this.forgotPassword.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    \r\n    forgotPassword(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/forgot', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email})\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            } else {\r\n\r\n                this.setState({errorMessage: json.message});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PopupForgotPassword\" >\r\n                <div className=\"PopupForgotPassword-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                    initialValues={{email: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.forgotPassword(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty')\r\n                    })}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Quên mật khẩu?</h2>\r\n                                    <div>Vui lòng nhập email đăng nhập để lấy lại mật khẩu</div>\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <input className=\"input-email\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Gửi\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupForgotPassword;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignIn.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie'\r\nimport GoogleLogin from 'react-google-login';\r\nimport PopupForgotPassword from './PopupForgotPassword/PopupForgotPassword'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies(),\r\n            seen: false\r\n        };\r\n        this.login = this.login.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/email',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                this.state.cookies.set('isLogin', 'login', {maxAge: 36000000, httpOnly: false});\r\n                this.props.LoginLogout(true);\r\n                this.setState({redirect: true});\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignIn\">\r\n                <Formik\r\n                    initialValues={{email: '', password: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.login(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty'),\r\n                        password: Yup.string()\r\n                            .min(8, 'To short!!!')\r\n                            .max(50, 'To long!!!')\r\n                            .required('Password is empty'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signin-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Nhập</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div style={{textAlign: \"center\"}} className=\"font-white\" >Email (Tên Đăng Nhập)</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-white\" style={{cursor: 'pointer'}} onClick={this.togglePopup}>Quên mật khẩu</div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Nhập\"/>\r\n                                    <GoogleLogin\r\n                                        clientId=\"639654572878-40oqbl8t2cj3dvjv8vj9othe1he9oepv.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\r\n                                        buttonText=\"LOGIN WITH GOOGLE\"\r\n                                        onSuccess={() => {\r\n                                            this.state.cookies.set('isLogin', 'login');\r\n                                            this.props.LoginLogout(true);\r\n                                            this.setState({redirect: true});\r\n                                            }\r\n                                        }\r\n                                        onFailure={(res) => {console.log(res)}}\r\n                                    />\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n                {\r\n                    this.state.seen ? <PopupForgotPassword toggle={this.togglePopup} /> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignUp.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.signup = this.signup.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/email',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                this.state.cookies.set('isLogin', 'login');\r\n                this.props.LoginLogout(true);\r\n                this.setState({redirect: true});\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    signup(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/register/email',{\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    name: values.fullname, \r\n                    password: values.password,\r\n                    email: values.email\r\n                }\r\n            )\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                // this.props.LoginLogout(true);\r\n                // this.setState({redirect: true});\r\n                this.login(values, actions);\r\n                \r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignUp\">\r\n                <Formik\r\n                    initialValues={{fullname: '', email: '', password: '',phoneNumber: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.signup(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        fullname: Yup.string()\r\n                            .required('Tên người dùng còn trống'),\r\n                        email: Yup.string()\r\n                            .email('Email không hợp lệ')\r\n                            .required('Email không được để trống'),\r\n                        password: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                        phoneNumber: Yup.number()\r\n                            .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                            .positive('không được có kí tự trong sđt'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signup-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Kí</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Tên Đăng Nhập</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.fullname}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.fullname}\r\n                                            name=\"fullname\"\r\n                                            placeholder=\"Hãy nhập họ và tên\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"email\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Số điện thoại</div>\r\n                                            {props.touched.phoneNumber && props.errors.phoneNumber? (\r\n                                                <div className=\"invalid-message\">{props.errors.phoneNumber}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"number\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.phoneNumber}\r\n                                            name=\"phoneNumber\"\r\n                                            placeholder=\"0xxxxx\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Kí\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\r\nimport './Category.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Category extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {};\r\n    // }\r\n\r\n    render(){\r\n        return(\r\n            <Link to={`/search/${this.props.key_data}/books`}>\r\n                <div className=\"category-item\">\r\n                    {this.props.category.toUpperCase()}\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React, { Component } from 'react';\r\nimport './SideBar.css';\r\nimport Category from './Category/Category';\r\n\r\nclass SideBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SideBar\" onMouseLeave={() => this.closeDropdown()}>\r\n                <div className=\"sidebar-header\"\r\n                    onMouseEnter={() => this.openDropdown()}>\r\n                    TẤT CẢ DANH MỤC\r\n                </div>\r\n                {\r\n                    this.state.isOpen ? (\r\n                        <div className=\"sidebar-body\">\r\n                            {\r\n                                this.props.categories.map(item => (\r\n                                    <Category key={item._id} key_data={item._id} category={item.name}/>\r\n                                ))\r\n                            }\r\n                        </div>  \r\n                    ) : (\r\n                        <div/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport './Item.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item\" onClick={this.reloadPage}>\r\n                <div className=\"avatar-item\">\r\n                    <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                        <img src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"infor-item\">\r\n                    <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                        <div>\r\n                            {this.props.name}\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"author\" >\r\n                        {this.props.author}\r\n                    </div>\r\n                    <div>\r\n                        Giá: {this.props.price}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from 'react';\r\nimport './BookSlider.css';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Item from './Item/Item'\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass BookSlider extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/' + this.props.data_key)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            }\r\n            else {\r\n                this.setState({books: json.books});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(this.state.books.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"BookSlider\">\r\n                <div className=\"book-slider-title\">{this.props.categories.toUpperCase()}</div>\r\n                <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                    {\r\n                        this.state.books.map(book => (\r\n                            <Item categorieID={this.props.data_key} key={book._id} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookSlider;","import React, { Component } from 'react';\r\nimport './Calculate.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Calculate extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            redirect: false,\r\n            shipping: false,\r\n            totalPrice: 0\r\n        };\r\n        this.order = this.order.bind(this);\r\n        this.cancelCheckout = this.cancelCheckout.bind(this);\r\n        this.shipping = this.shipping.bind(this);\r\n    }\r\n    \r\n    order() {\r\n        if(this.props.cookies.get('isLogin')){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/validate',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({cart: this.props.cart})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                console.log(json);\r\n            })\r\n        } else {\r\n            this.setState({redirect: true});\r\n        }\r\n    }\r\n\r\n    \r\n    cancelCheckout() {\r\n        this.setState({success: false});\r\n    }\r\n\r\n    shipping() {\r\n        this.setState({shipping: true});\r\n    }\r\n    \r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        let total = 0;\r\n        this.props.cart.map(item => total += item.quant*item.price);\r\n        this.setState({totalPrice: total});\r\n    }\r\n    // componentWillUnmount(){}\r\n    // componentWillReceiveProps(){}\r\n\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(this.state.shipping){\r\n            return(<Redirect to='/shipping'/>);\r\n        }\r\n\r\n        if(this.state.success){\r\n            return(\r\n                <div className=\"Calculate\">\r\n                    <div className=\"order\">\r\n                        <button onClick={this.cancelCheckout} className=\"btn-order\">Trở lại</button>\r\n                    </div>\r\n                    <div className=\"order\">\r\n                        <button className=\"btn-order\" onClick={this.shipping}>Xác nhận</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if(this.state.redirect){\r\n            return(<Redirect to='/signin'/>);\r\n        }\r\n        return (\r\n            <div className=\"Calculate\">\r\n                <div className=\"calculated-money\">\r\n                    <div className=\"prices-items\">\r\n                        Tạm tính: {this.state.totalPrice}\r\n                    </div>\r\n                    <div className=\"prices-total\">\r\n                        Thành tiền: {this.state.totalPrice}\r\n                    </div>\r\n                </div>\r\n                <div className=\"order\">\r\n                    <button className=\"btn-order\" onClick={this.order}>Tiến hành đặt hàng</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculate;","import React, { Component } from 'react';\r\nimport './ShoppingCartItem.css';\r\n\r\nclass ShoppingCartItem extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ShoppingCartItem\">\r\n                <div>{this.props.name}</div>\r\n                <div>{this.props.quant}</div>\r\n                <div>{this.props.price}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCartItem;","import React, { Component } from 'react';\r\nimport './ShoppingCart.css';\r\nimport Calculate from './Calculate/Calculate';\r\nimport ShoppingCartItem from './ShoppingCartItem/ShoppingCartItem';\r\n\r\nclass ShoppingCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cart: this.props.cookies.get('shoppingCart'),\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        console.log(this.state.cart);\r\n        return (\r\n            <div className=\"ShoppingCart\">\r\n                <h3 className=\"shopping-cart-title\">GIỎ HÀNG</h3>\r\n                <div className=\"list-product\">\r\n                    {\r\n                        this.state.cart && this.state.cart.map(item => (\r\n                            <ShoppingCartItem key={item.id} name={item.name} quant={item.quant} price={item.price}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Calculate cookies={this.props.cookies} cart={this.state.cart}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCart;","import React, { Component } from 'react';\r\nimport './BookDetail.css';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom';\r\nimport BookSlider  from '../BookSlider/BookSlider'\r\nclass BookDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isSuccess: false,\r\n            element: 1,\r\n            book: {}\r\n        };\r\n        this.expel = this.expel.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.addToShoppingCart = this.addToShoppingCart.bind(this);\r\n    }\r\n    expel(){\r\n        if(this.state.element-1 > 0){\r\n            this.setState({\r\n                element: this.state.element-1\r\n            });\r\n        }\r\n    }\r\n    add(){\r\n        this.setState({\r\n            element: this.state.element+1\r\n        });\r\n    }\r\n\r\n    addToShoppingCart() {\r\n        const {name, price}= this.state.book;\r\n        if(!this.props.cookies.get('shoppingCart')){\r\n            let shoppingCart = [{id: this.props.match.params.bookId, \r\n                name: name,\r\n                price: price, \r\n                quant: this.state.element}];\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n            console.log(shoppingCart)\r\n        } else {\r\n            let shoppingCart = this.props.cookies.get('shoppingCart');\r\n            let included = false;\r\n            let indexOf;\r\n            shoppingCart.map((item, index) => {\r\n                if(item.id === this.props.match.params.bookId){\r\n                    included = true;\r\n                    indexOf = index;\r\n                }\r\n                return true;\r\n            });\r\n            if(included){\r\n                shoppingCart[indexOf].quant += this.state.element;\r\n            } else {\r\n                shoppingCart.push({id: this.props.match.params.bookId, \r\n                    name: name, \r\n                    price: price, \r\n                    quant: this.state.element});\r\n            }\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n            console.log(shoppingCart)\r\n        }\r\n        this.setState({isSuccess: !this.state.isSuccess});\r\n        \r\n    }\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/title/'+this.props.match.params.bookId)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success) {\r\n                \r\n            } else {\r\n                this.setState({book: json.book});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    \r\n    render() {\r\n        console.log(this.props.match.params.bookId);\r\n        return (\r\n            <div className=\"BookDetail\">\r\n                <div className=\"avatar\">\r\n                    <img src={`https://bbook-backend.herokuapp.com/${this.state.book.image}`} width=\"80%\" height=\"80%\" alt={'BookTitle'}/>\r\n                </div>\r\n                <div className=\"book-infor\">\r\n                    <div className=\"book-name text-color-white\">{this.state.book.name}</div>\r\n                    <div className=\"text-color-white author\">Tác giả: {this.state.book.author}</div>\r\n                    <div className=\"text-color-white\">Giá: {this.state.book.price}đ</div>\r\n                    <div className=\"text-color-white\"> Số lượng\r\n                    <div className='groupInput'>\r\n                        <button className=\"btn-expel\" onClick={this.expel}>-</button>\r\n                        <input value={this.state.element} onChange={() => {}}/>\r\n                        <button className=\"btn-add\" onClick={this.add}>+</button>\r\n                    </div></div>\r\n                    <button className=\"btn-add-to-cart\" onClick={this.addToShoppingCart}>\r\n                        <FontAwesomeIcon icon={faShoppingCart}/>\r\n                        Chọn mua\r\n                    </button>\r\n                    {\r\n                        this.state.isSuccess ? (\r\n                            <Alert variant=\"filled\" onClose={()=>{this.setState({isSuccess: !this.state.isSuccess})}} severity=\"success\">Đã thêm sách vào giỏ hàng</Alert>\r\n                        ) : (null)\r\n                    }\r\n                </div>\r\n                <div className=\"listBook\">\r\n                <BookSlider data_key={this.props.match.params.categorieID} categories={\"Sách cùng thể loại\"}/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BookDetail);","import React, { Component } from 'react';\r\nimport './Shipping.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Shipping extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"Shipping\">\r\n                <h3 className=\"shipping-title\">ĐỊA CHỈ GIAO HÀNG</h3>\r\n                <div className=\"shipping-infor\">\r\n                    <h4 className=\"text-white\">User Name</h4>\r\n                    <div className=\"text-white\">\r\n                        Địa chỉ:\r\n                    </div>\r\n                    <div className=\"text-white\">\r\n                        Số điện thoại: \r\n                    </div>\r\n                </div>\r\n                <div className=\"btn-shipping-layout\">\r\n                    <button className=\"btn-shipping\">Giao tới địa chỉ này</button>\r\n                    <button className=\"btn-change-address\">Sửa</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shipping;","import React, { Component } from 'react';\r\nimport './SearchBook.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Item from '../BookSlider/Item/Item';\r\n\r\nclass SearchBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: []\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/'+this.props.match.params.category)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({books: json.books});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBook\">\r\n                {\r\n                    this.state.books.map(book => (\r\n                        <Item key={book._id} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchBook);","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport Cookies from 'universal-cookie';\r\nimport SideBar from './SideBar/SideBar';\r\nimport BookSlider from './BookSlider/BookSlider';\r\nimport ShoppingCart from './ShoppingCart/ShoppingCart'\r\nimport { Route } from 'react-router-dom';\r\nimport BookDetail from './BookDetail/BookDetail';\r\nimport Shipping from './Shipping/Shipping';\r\nimport SearchBook from './SearchBook/SearchBook';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            cookies: new Cookies()\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/category')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({categories: json.categories});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    // logout() {\r\n    //     fetch('/user/logout',{method: 'POST'});\r\n    //     this.state.cookies.remove('mUser');\r\n    //     this.props.LoginLogout(false);\r\n    //     this.setState({redirect: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Route exact path='/shoppingCart'>\r\n                    <ShoppingCart cookies={this.state.cookies}/>\r\n                </Route>\r\n                <Route exact path=\"/:categorieID/:bookId\">\r\n                    <BookDetail cookies={this.state.cookies}/>\r\n                </Route>\r\n                <Route exact path=\"/shipping\">\r\n                    <Shipping cookies={this.state.cookies}/>\r\n                </Route>\r\n                <Route exact path='/search/:category/books'>\r\n                    <SideBar categories={this.state.categories}/>\r\n                    <SearchBook/>\r\n                </Route>\r\n                <Route exact path='/'>\r\n                    <SideBar categories={this.state.categories}/>\r\n                    <div style={{width: '100%'}}>\r\n                        {\r\n                            this.state.categories.map(item => (\r\n                                <BookSlider key={item._id} data_key={item._id} categories={item.name}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </Route>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './ErrorPage.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass ErrorPage extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-up-form\">\r\n                <div className=\"message\">404 PAGE NOT FOUND</div>\r\n                <div>\r\n                    <Link to=\"/\"><div className=\"header-item\">RETURN</div></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport './ResetPassword.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ResetPassword extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        \r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"text-white\">\r\n                    {this.props.match.params.tokenId}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPassword);","import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport './Exchange.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Exchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.state.cookies.get('isLogin')){\r\n            return(<Redirect path='/'/>)\r\n        }\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Exchange;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from '../HeaderBar/HeaderBar';\r\nimport SignIn from '../Auth/SignIn/SignIn';\r\nimport {\r\n    HashRouter,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport SignUp from '../Auth/SignUp/SignUp';\r\nimport Home from '../Home/Home';\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\nimport ResetPassword from '../ResetPassword/ResetPassword'\r\nimport Exchange from '../Exchange/Exchange';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLogin: false,\r\n        };\r\n        this.LoginLogout = this.LoginLogout.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount(){}\r\n\r\n    LoginLogout(isLogin) {\r\n        this.setState({isLogin});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"background-image\">\r\n                    <div className=\"background-content\">\r\n                        <HashRouter>\r\n                            <HeaderBar LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                            <Switch>\r\n                                <Route exact path='/signin' >\r\n                                    <SignIn LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/signup'>\r\n                                    <SignUp LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/reset/:tokenId'>\r\n                                    <ResetPassword/>\r\n                                </Route>\r\n                                <Route exact path='/exchange'>\r\n                                    <Exchange/>\r\n                                </Route>\r\n                                <Route path='/'>\r\n                                    <Home/>\r\n                                </Route>\r\n                                <Route component={ErrorPage}/>\r\n                            </Switch>\r\n                        </HashRouter>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/shoppingCart.891cbcab.png\";"],"sourceRoot":""}