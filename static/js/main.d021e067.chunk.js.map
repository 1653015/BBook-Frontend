{"version":3,"sources":["Components/HeaderBar/PopupChangePassword/PopupChangePassword.js","Components/HeaderBar/HeaderBar.js","Components/Auth/SignIn/PopupForgotPassword/PopupForgotPassword.js","Components/Auth/SignIn/SignIn.js","Components/Auth/SignUp/SignUp.js","Components/Home/SideBar/Category/Category.js","Components/Home/SideBar/SideBar.js","Components/Home/BookSlider/Item/Item.js","Components/Home/BookSlider/BookSlider.js","Components/Home/Home.js","Components/ErrorPage/ErrorPage.js","Components/ResetPassword/ResetPassword.js","Components/Exchange/ItemExchange/ItemExchange.js","Components/Exchange/Exchange.js","Components/Home/SearchBook/SearchBook.js","Components/Home/Shipping/UpdateShippingInfor/UpdateShippingInfor.js","Components/Home/Shipping/Shipping.js","Components/Home/BookDetail/BookDetail.js","Components/Home/ShoppingCart/Calculate/Calculate.js","Components/Home/ShoppingCart/ShoppingCartItem/ShoppingCartItem.js","Components/Home/ShoppingCart/ShoppingCart.js","Components/CreateExchangeBook/CreateExchangeBook.js","Components/Exchange/UserBookStorage/UserBookStorage.js","Components/Exchange/ViewBookExchange/ViewBookExchange.js","Components/App/App.js","serviceWorker.js","index.js","img/shoppingCart.png"],"names":["PopupChangePassword","props","handleClick","toggle","state","errorMessage","hidePass","hidenewPass","hideretypePass","token","changePassword","bind","hideStatePass","hideStatenewPass","hideStateretypePass","values","actions","newPassword","retypePass","fetch","method","headers","this","cookies","get","body","JSON","stringify","oldPassword","then","res","json","success","setState","message","setSubmitting","eye_Pass","faEye","faEyeSlash","eye_newPass","eye_retypePass","className","onClick","initialValues","onSubmit","validationSchema","Yup","min","required","handleSubmit","type","onChange","handleChange","value","name","placeholder","icon","disabled","isSubmitting","Component","HeaderBar","handleKeyDown","e","key","searchBookByName","searchBookName","console","log","books","updateInputValue","evt","target","Cookies","isOpen","logout","togglePopup","seen","provider","auth2","window","gapi","getAuthInstance","undefined","signOut","disconnect","onLogoutSuccess","remove","LoginLogout","to","onKeyDown","src","ShoppingCart","width","height","alt","PopupForgotPassword","forgotPassword","email","SignIn","redirect","loginProvider","login","password","status","text","set","maxAge","httpOnly","user","uid","googleId","Tt","Bd","style","textAlign","touched","errors","cursor","clientId","buttonText","onSuccess","onFailure","SignUp","signup","fullname","phone","phoneNumber","toString","moreThan","positive","Category","reloadPage","location","reload","key_data","category","toUpperCase","SideBar","onMouseLeave","closeDropdown","onMouseEnter","openDropdown","categories","map","item","_id","Item","categorieID","color","image","author","price","breakPoints","itemsToShow","itemsToScroll","BookSlider","data_key","pointer","length","transitionMs","disableArrowsOnEnd","renderArrow","myArrow","book","Home","ErrorPage","ResetPassword","retypePassword","match","params","tokenId","resetPassword","withRouter","ItemExchange","Exchange","owner","path","SearchBook","UpdateShippingInfor","updateAddress","updatePhone","address","closeUpdate","Shipping","openUpdateInf","ship","cart","items","total","destination","numbers","alert","BookDetail","isSuccess","element","expel","add","addToShoppingCart","indexOf","shoppingCart","included","index","id","bookId","quant","push","faShoppingCart","Alert","variant","onClose","severity","Calculate","shipping","totalPrice","totalItem","order","cancelCheckout","ShoppingCartItem","updateItemQuant","deleteBookfromCart","i","splice","defaultValue","faTimes","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","CreateExchangeBook","userBooks","storeBooks","isDisable","loadUserBooks","loadStoreBooks","postTrade","interested","traderq","autoComplete","list","Select","labelId","multiple","MenuItem","UserBookStorage","ViewBookExchange","App","isLogin","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.d021e067.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './PopupChangePassword.css';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nclass PopupChangePassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            hidePass: true,\r\n            hidenewPass:true,\r\n            hideretypePass:true,\r\n            token: '',\r\n        };\r\n        this.changePassword = this.changePassword.bind(this);\r\n        this.hideStatePass = this.hideStatePass.bind(this);\r\n        this.hideStatenewPass = this.hideStatenewPass.bind(this);\r\n        this.hideStateretypePass = this.hideStateretypePass.bind(this);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    \r\n    changePassword(values, actions){\r\n        if(values.newPassword === values.retypePass){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/password', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({oldPassword: values.oldPassword, newPassword: values.newPassword})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if(!json.success){\r\n                    this.setState({errorMessage: json.message});\r\n                    actions.setSubmitting(false);\r\n                } else {\r\n                    this.props.toggle();\r\n                    this.setState({errorMessage: json.message});\r\n                }\r\n            })\r\n        } else {\r\n            actions.setSubmitting(false);\r\n        }\r\n    }\r\n    hideStatePass(){\r\n        const{ hidePass } = this.state;\r\n        if (hidePass){\r\n        this.setState({\r\n            hidePass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hidePass:true\r\n            })\r\n        }\r\n    }\r\n    hideStatenewPass(){\r\n        const{ hidenewPass } = this.state;\r\n        if (hidenewPass){\r\n        this.setState({\r\n            hidenewPass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hidenewPass:true\r\n            })\r\n        }\r\n    }\r\n    hideStateretypePass(){\r\n        const{ hideretypePass } = this.state;\r\n        if (hideretypePass){\r\n        this.setState({\r\n            hideretypePass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hideretypePass:true\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const eye_Pass = this.state.hidePass ? faEye : faEyeSlash;\r\n        const eye_newPass = this.state.hidenewPass ? faEye : faEyeSlash;\r\n        const eye_retypePass = this.state.hideretypePass ? faEye : faEyeSlash;\r\n        return (\r\n            <div className=\"PopupChangePassword\" >\r\n                <div className=\"PopupChangePassword-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                        initialValues={{oldPassword: '', newPassword: '', retypePass: ''}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.changePassword(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            oldPassword: Yup.string()\r\n                                .min(8, 'To short!!!')\r\n                                .required('Điền mật khẩu cũ'),\r\n                            newPassword: Yup.string()\r\n                                .min(8, 'To short!!!')    \r\n                                .required('Điền mật khẩu mới'),\r\n                            retypePass: Yup.string()\r\n                                .min(8, 'To short!!!')\r\n                                .required('Nhập lại mật khẩu mới')\r\n                        })}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Đổi mật khẩu</h2>\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hidePass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.oldPassword}\r\n                                            name=\"oldPassword\"\r\n                                            placeholder=\"Mật khẩu cũ\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_Pass} onClick={this.hideStatePass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hidenewPass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.newPassword}\r\n                                            name=\"newPassword\"\r\n                                            placeholder=\"Mật khẩu mới\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_newPass} onClick={this.hideStatenewPass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hideretypePass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.retypePass}\r\n                                            name=\"retypePass\"\r\n                                            placeholder=\"Xác nhận mật khẩu mới\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_retypePass} onClick={this.hideStateretypePass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Xác nhận\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupChangePassword;","import React, { Component } from 'react';\r\nimport './HeaderBar.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport ShoppingCart from '../../img/shoppingCart.png'\r\nimport PopupChangePassword from './PopupChangePassword/PopupChangePassword'\r\nclass HeaderBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            isOpen: false,\r\n            searchBookName: ''\r\n        };\r\n        this.logout = this.logout.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    logout() {\r\n        \r\n        if(this.state.cookies.get('m_inf_u').provider === 'googel'){\r\n            const auth2 = window.gapi.auth2.getAuthInstance();\r\n            if (auth2 !== undefined|| auth2 !== null) {\r\n                auth2.signOut().then(() => {\r\n                        auth2.disconnect().then(this.props.onLogoutSuccess);\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        this.state.cookies.remove('isLogin');\r\n        this.state.cookies.remove('u_t');\r\n        this.state.cookies.remove('m_inf_u');\r\n        this.props.LoginLogout(false);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.searchBookByName();\r\n        }\r\n    }\r\n\r\n    searchBookByName = () => {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/title/'+this.state.searchBookName)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                console.log(json.books)\r\n            }\r\n        })\r\n    }\r\n\r\n    updateInputValue = (evt) => {\r\n        this.setState({searchBookName: evt.target.value})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (\r\n                <div className=\"header-bbook\">\r\n                    <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                    <Link to='/exchange' className=\"header-item cursor-pointer\">Trao đổi</Link>\r\n                    <Link to='/exchange/viewbook/exchange' className=\"header-item cursor-pointer\">Xem sách đổi </Link>\r\n                    <Link to='/viewbookstorage' className=\"header-item cursor-pointer\">Sách của bạn</Link>\r\n                    <div className=\"signin-signup-layout\">\r\n                    <div className=\"flexbox\">\r\n                        <div className=\"search\">\r\n                            <div>\r\n                                <input value={this.state.searchBookName} onChange={this.updateInputValue} onKeyDown={this.handleKeyDown} type=\"text\" placeholder=\"       Search . . .\" required/>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                            <div className=\"header-item dropdown\">\r\n                                <span className=\"dropbtn\">{this.state.cookies.get('m_inf_u')&&this.state.cookies.get('m_inf_u').name}</span>\r\n                                <div className=\"dropdown-content\">\r\n                                    <div className=\"link cursor-pointer\"onClick={this.togglePopup}>\r\n                                        Đổi mật khẩu\r\n                                    </div>\r\n                                    <div className=\"link\"onClick={this.logout}>Đăng xuất</div>\r\n                                </div>\r\n                            </div>        \r\n                        <div className=\"header-item\">\r\n                            <Link to=\"/shoppingCart\">\r\n                                <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.seen ? <PopupChangePassword cookies={this.state.cookies} toggle={this.togglePopup} /> : null\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"header-bbook\">\r\n                <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                <div className=\"signin-signup-layout\">\r\n                    <Link to='/signin'><div className=\"header-item\">Đăng nhập</div></Link>\r\n                    <Link to='/signup'><div className=\"header-item\">Đăng kí</div></Link>\r\n                    <div className=\"header-item\">\r\n                        <Link to=\"/shoppingCart\">\r\n                            <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderBar;","import React, { Component } from 'react';\r\nimport './PopupForgotPassword.css';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nclass PopupForgotPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n        };\r\n        this.forgotPassword = this.forgotPassword.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    \r\n    forgotPassword(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/forgot', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email})\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            } else {\r\n\r\n                this.setState({errorMessage: json.message});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PopupForgotPassword\" >\r\n                <div className=\"PopupForgotPassword-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                    initialValues={{email: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.forgotPassword(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty')\r\n                    })}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Quên mật khẩu?</h2>\r\n                                    <div>Vui lòng nhập email đăng nhập để lấy lại mật khẩu</div>\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <input className=\"input-email-forgotpass\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Gửi\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupForgotPassword;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignIn.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie'\r\nimport GoogleLogin from 'react-google-login';\r\nimport PopupForgotPassword from './PopupForgotPassword/PopupForgotPassword'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies(),\r\n            seen: false\r\n        };\r\n        this.loginProvider = this.loginProvider.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/email',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 36000000, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    loginProvider(res){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/auth-provider',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                provider: \"google\",\r\n                uid: res.googleId, \r\n                name: res.Tt.Bd})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 86400, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 86400, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 86400, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignIn\">\r\n                <Formik\r\n                    initialValues={{email: '', password: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.login(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty'),\r\n                        password: Yup.string()\r\n                            .min(8, 'To short!!!')\r\n                            .required('Password is empty'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signin-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Nhập</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div style={{textAlign: \"center\"}} className=\"font-white\" >Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-white\" style={{cursor: 'pointer'}} onClick={this.togglePopup}>Quên mật khẩu</div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Nhập\"/>\r\n                                    <GoogleLogin\r\n                                        // clientId=\"639654572878-40oqbl8t2cj3dvjv8vj9othe1he9oepv.apps.googleusercontent.com\" //Localhost\r\n                                        clientId=\"473601010653-5nodt0b4a3jsjmd8c3l42v8fgh5fofhe.apps.googleusercontent.com\" //github-pagehost\r\n                                        buttonText=\"LOGIN WITH GOOGLE\"\r\n                                        onSuccess={(res) => this.loginProvider(res)}\r\n                                        onFailure={(res) => {console.log(res)}}\r\n                                    />\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n                {\r\n                    this.state.seen ? <PopupForgotPassword toggle={this.togglePopup} /> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignUp.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.signup = this.signup.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/email',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 36000000, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    signup(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/register/email',{\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    name: values.fullname, \r\n                    password: values.password,\r\n                    email: values.email,\r\n                    phone: values.phoneNumber.toString(),\r\n                }\r\n            )\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                // this.props.LoginLogout(true);\r\n                // this.setState({redirect: true});\r\n                this.login(values, actions);\r\n                \r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignUp\">\r\n                <Formik\r\n                    initialValues={{fullname: '', email: '', password: '',phoneNumber: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.signup(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        fullname: Yup.string()\r\n                            .required('Tên người dùng còn trống'),\r\n                        email: Yup.string()\r\n                            .email('Email không hợp lệ')\r\n                            .required('Email không được để trống'),\r\n                        password: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                        phoneNumber: Yup.number()\r\n                            .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                            .positive('không được có kí tự trong sđt'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signup-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Kí</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Tên Đăng Nhập</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.fullname}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.fullname}\r\n                                            name=\"fullname\"\r\n                                            placeholder=\"Hãy nhập họ và tên\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"email\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Số điện thoại</div>\r\n                                            {props.touched.phoneNumber && props.errors.phoneNumber? (\r\n                                                <div className=\"invalid-message\">{props.errors.phoneNumber}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"tel\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.phoneNumber}\r\n                                            name=\"phoneNumber\"\r\n                                            placeholder=\"0xxxxx\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Kí\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\r\nimport './Category.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Category extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div onClick={this.reloadPage}>\r\n                <Link to={`/search/${this.props.key_data}/books`}>\r\n                    <div className=\"category-item\">\r\n                        {this.props.category.toUpperCase()}\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React, { Component } from 'react';\r\nimport './SideBar.css';\r\nimport Category from './Category/Category';\r\n\r\nclass SideBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SideBar\" onMouseLeave={() => this.closeDropdown()}>\r\n                <div className=\"sidebar-header\"\r\n                    onMouseEnter={() => this.openDropdown()}>\r\n                    TẤT CẢ DANH MỤC\r\n                </div>\r\n                {\r\n                    this.state.isOpen ? (\r\n                        <div className=\"sidebar-body\">\r\n                            {\r\n                                this.props.categories.map(item => (\r\n                                    <Category key={item._id} key_data={item._id} category={item.name}/>\r\n                                ))\r\n                            }\r\n                        </div>  \r\n                    ) : (\r\n                        <div/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport './Item.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"avatar-item\" onClick={this.reloadPage}>\r\n                    <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                        <img className=\"avata-img\" src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"infor-item\">\r\n                    <div onClick={this.reloadPage}>\r\n                        <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                            {this.props.name}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"author\" >\r\n                        {this.props.author}\r\n                    </div>\r\n                    <div>\r\n                        Giá: {this.props.price}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from 'react';\r\nimport './BookSlider.css';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Item from './Item/Item'\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass BookSlider extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/' + this.props.data_key)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            }\r\n            else {\r\n                this.setState({books: json.books});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(this.state.books.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"BookSlider\">\r\n                <div className=\"book-slider-title\">{this.props.categories.toUpperCase()}</div>\r\n                <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                    {\r\n                        this.state.books.map(book => (\r\n                            <Item categorieID={this.props.data_key} key={book._id} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookSlider;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport Cookies from 'universal-cookie';\r\nimport SideBar from './SideBar/SideBar';\r\nimport BookSlider from './BookSlider/BookSlider';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            cookies: new Cookies()\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/category')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({categories: json.categories});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    // logout() {\r\n    //     fetch('/user/logout',{method: 'POST'});\r\n    //     this.state.cookies.remove('mUser');\r\n    //     this.props.LoginLogout(false);\r\n    //     this.setState({redirect: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <SideBar categories={this.state.categories}/>\r\n                <div style={{width: '100%'}}>\r\n                    {\r\n                        this.state.categories.map(item => (\r\n                            <BookSlider key={item._id} data_key={item._id} categories={item.name}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './ErrorPage.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass ErrorPage extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-up-form\">\r\n                <div className=\"message\">404 PAGE NOT FOUND</div>\r\n                <div>\r\n                    <Link to=\"/\"><div className=\"header-item\">RETURN</div></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport './ResetPassword.css';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        \r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    resetPassword(values, actions) {\r\n        if(values.newPassword === values.retypePassword){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/reset/'+this.props.match.params.tokenId,{\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({password: values.newPassword})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if(json.success){\r\n\r\n                } else {\r\n\r\n                }\r\n                actions.setSubmitting(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n        return (\r\n            <div className=\"ResetPassword\">\r\n                <Formik\r\n                    initialValues={{newPassword: '', retypePassword: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.resetPassword(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        newPassword: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                        retypePassword: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                    })}>\r\n                    {\r\n                        props => (\r\n                            <form onSubmit={props.handleSubmit} className=\"signup-form\">\r\n                                <h1 className=\"text-white  text-center\">Đặt lại password</h1>\r\n                                <div className=\"form-item\">\r\n                                    <div className=\"form-item-header\">\r\n                                        <div className=\"font-white\">Mật khẩu mới</div>\r\n                                        {props.touched.newPassword && props.errors.newPassword? (\r\n                                            <div className=\"invalid-message\">{props.errors.newPassword}</div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                    <input className=\"form-input\"\r\n                                        type=\"password\"\r\n                                        onChange={props.handleChange}\r\n                                        value={props.values.newPassword}\r\n                                        name=\"newPassword\"\r\n                                        placeholder=\"Hãy nhập mật khẩu mới\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-item\">\r\n                                <div className=\"form-item-header\">\r\n                                        <div className=\"font-white\">Nhập lại mật khẩu</div>\r\n                                        {props.touched.retypePassword && props.errors.retypePassword? (\r\n                                            <div className=\"invalid-message\">{props.errors.retypePassword}</div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                    <input className=\"form-input\"\r\n                                        type=\"password\"\r\n                                        onChange={props.handleChange}\r\n                                        value={props.values.newPassword}\r\n                                        name=\"newPassword\"\r\n                                        placeholder=\"Hãy nhập mật khẩu mới\"\r\n                                    />\r\n                                </div>\r\n                                <input disabled={props.isSubmitting} type=\"submit\" value=\"Gửi\"/>\r\n                            </form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPassword);","import React, { Component } from 'react';\r\nimport './ItemExchange.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ItemExchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ItemExchange\">\r\n                <div className=\"avatar-ItemExchange\" onClick={this.reloadPage}>\r\n                    <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                        <img className=\"avata-img\" src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"infor-ItemExchange\">\r\n                    <div onClick={this.reloadPage}>\r\n                        <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                            {this.props.name}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"author\" >\r\n                        Chủ sách: {this.props.author}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemExchange;","import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport './Exchange.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ItemExchange from './ItemExchange/ItemExchange';\r\n\r\nclass Exchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            books: []\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.state.cookies.get('isLogin')){\r\n            return(<Redirect path='/'/>)\r\n        }\r\n        return (\r\n                <div className=\"Exchange\">\r\n                {\r\n                    this.state.books.map(book => (\r\n                        <div key={book._id} className=\"item-box\">\r\n                            <ItemExchange  key_data={book._id} image={book.image} name={book.name} owner={book.owner} price={book.price}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Exchange;","import React, { Component } from 'react';\r\nimport './SearchBook.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Item from '../BookSlider/Item/Item';\r\n\r\nclass SearchBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: []\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/'+this.props.match.params.category)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({books: json.books});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(this.state.books.length === 0){\r\n            return(<div className=\"SearchBook text-white\"> Không có sách </div>);\r\n        }\r\n        \r\n        return (\r\n            <div className=\"SearchBook\">\r\n                {\r\n                    this.state.books.map(book => (\r\n                        <div key={book._id} className=\"item-box\">\r\n                            <Item categorieID={this.props.match.params.category} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchBook);","import React, { Component } from 'react';\r\nimport './UpdateShippingInfor.css';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nclass UpdateShippingInfor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: ''\r\n        };\r\n        this.updateAddress = this.updateAddress.bind(this);\r\n        this.updatePhone = this.updatePhone.bind(this);\r\n    }\r\n    updateAddress(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/address',{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t') \r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    address: values.address,\r\n                }\r\n            )\r\n        })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n            if(json.success){\r\n                this.updatePhone(values, actions);\r\n            }else {\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n    updatePhone(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/numbers',{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    phone: values.phone,\r\n                }\r\n            )\r\n        })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n            if(json.success){\r\n                this.props.cookies.set('m_inf_u', json.user);\r\n                this.props.closeUpdate();\r\n            }else {\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"UpdateShippingInfor\">\r\n                <div className=\"updateShippingInfor-content\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            address: this.props.cookies.get('m_inf_u').address,\r\n                            phone: this.props.cookies.get('m_inf_u').phone}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.updateAddress(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            address: Yup.string()\r\n                                .required('address is empty'),\r\n                            phone: Yup.number()\r\n                                .required('Số điện thoại không được để trống')\r\n                                .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                                .positive('không được có kí tự trong sđt'),\r\n                        })}\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div style={{textAlign: \"center\"}}>Địa chỉ</div>\r\n                                                {props.touched.address && props.errors.address? (\r\n                                                    <div className=\"invalid-message\">{props.errors.address}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input className=\"form-input\"\r\n                                                type=\"text\"\r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.address}\r\n                                                name=\"address\"\r\n                                                placeholder=\"Hãy nhập địa chỉ của bạn\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div>Số điện thoại</div>\r\n                                                {props.touched.phone && props.errors.phone? (\r\n                                                    <div className=\"invalid-message\">{props.errors.phone}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input className=\"form-input\"\r\n                                                type=\"phone\"\r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.phone}\r\n                                                name=\"phone\"\r\n                                                placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Gửi\"/>\r\n                                    </form>\r\n                                )\r\n                            }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateShippingInfor;","import React, { Component } from 'react';\r\nimport './Shipping.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UpdateShippingInfor from './UpdateShippingInfor/UpdateShippingInfor'\r\n\r\nclass Shipping extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n        this.openUpdateInf = this.openUpdateInf.bind(this);\r\n        this.ship = this.ship.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    componentWillUnmount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({cart: this.props.cookies.get('shoppingCart')})\r\n        })\r\n    }\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    ship(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/transaction',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({\r\n                items: this.props.cookies.get('shoppingCart'),\r\n                total:this.props.cookies.get('total'),\r\n                destination: this.props.cookies.get('m_inf_u').address,\r\n                numbers: this.props.cookies.get('m_inf_u').phone\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                this.props.cookies.remove('shoppingCart');\r\n                alert('Đang vận chuyển')\r\n            }\r\n        })\r\n    }\r\n\r\n    openUpdateInf(){\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"Shipping\">\r\n                    <h3 className=\"shipping-title\">ĐỊA CHỈ GIAO HÀNG</h3>\r\n                    <div className=\"shipping-infor\">\r\n                        <h4 className=\"text-white\">{this.props.cookies.get('m_inf_u').name}</h4>\r\n                        <div className=\"text-white\">\r\n                            Địa chỉ: {this.props.cookies.get('m_inf_u').address}\r\n                        </div>\r\n                        <div className=\"text-white\">\r\n                            Số điện thoại: {this.props.cookies.get('m_inf_u').phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-shipping-layout\">\r\n                        <button onClick={this.ship} className=\"btn-shipping\">Giao tới địa chỉ này</button>\r\n                        <button onClick={this.openUpdateInf} className=\"btn-change-address\">Sửa</button>\r\n                    </div>\r\n                    {\r\n                        this.state.isOpen ? (<UpdateShippingInfor closeUpdate={this.openUpdateInf} cookies={this.props.cookies}/>) : (null)\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shipping;","import React, { Component } from 'react';\r\nimport './BookDetail.css';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom';\r\nimport BookSlider  from '../BookSlider/BookSlider'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nclass BookDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isSuccess: false,\r\n            element: 1,\r\n            book: {}\r\n        };\r\n        this.expel = this.expel.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.addToShoppingCart = this.addToShoppingCart.bind(this);\r\n    }\r\n    expel(){\r\n        if(this.state.element-1 > 0){\r\n            this.setState({\r\n                element: this.state.element-1\r\n            });\r\n        }\r\n    }\r\n    add(){\r\n        this.setState({\r\n            element: this.state.element+1\r\n        });\r\n    }\r\n    addToShoppingCart() {\r\n        const {image, name, price}= this.state.book;\r\n        if(!this.props.cookies.get('shoppingCart')){\r\n            let shoppingCart = [{id: this.props.match.params.bookId, \r\n                image: image,\r\n                name: name,\r\n                price: price, \r\n                quant: this.state.element}];\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n        } else {\r\n            let shoppingCart = this.props.cookies.get('shoppingCart');\r\n            let included = false;\r\n            let indexOf;\r\n            shoppingCart.map((item, index) => {\r\n                if(item.id === this.props.match.params.bookId){\r\n                    included = true;\r\n                    indexOf = index;\r\n                }\r\n                return true;\r\n            });\r\n            if(included){\r\n                shoppingCart[indexOf].quant += this.state.element;\r\n            } else {\r\n                shoppingCart.push({id: this.props.match.params.bookId,\r\n                    image: image,\r\n                    name: name, \r\n                    price: price, \r\n                    quant: this.state.element});\r\n            }\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n        }\r\n        this.setState({isSuccess: !this.state.isSuccess});\r\n        \r\n    }\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/title/'+this.props.match.params.bookId)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success) {\r\n                \r\n            } else {\r\n                this.setState({book: json.book});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    \r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"BookDetail\">\r\n                    <div className=\"avatar\">\r\n                        <img src={`https://bbook-backend.herokuapp.com/${this.state.book.image}`} width=\"80%\" height=\"80%\" alt={'BookTitle'}/>\r\n                    </div>\r\n                    <div className=\"book-infor\">\r\n                        <div className=\"book-name text-color-white\">{this.state.book.name}</div>\r\n                        <div className=\"text-color-white author\">Tác giả: {this.state.book.author}</div>\r\n                        <div className=\"text-color-white\">Giá: {this.state.book.price}đ</div>\r\n                        <div className=\"text-color-white\"> Số lượng\r\n                        <div className='groupInput'>\r\n                            <button className=\"btn-expel\" onClick={this.expel}>-</button>\r\n                            <input value={this.state.element} onChange={()=>{}}/>\r\n                            <button className=\"btn-add\" onClick={this.add}>+</button>\r\n                        </div></div>\r\n                        <button className=\"btn-add-to-cart\" onClick={this.addToShoppingCart}>\r\n                            <FontAwesomeIcon icon={faShoppingCart}/>\r\n                            Chọn mua\r\n                        </button>\r\n                        {\r\n                            this.state.isSuccess ? (\r\n                                <Alert variant=\"filled\" className=\"alert\" onClose={()=>{this.setState({isSuccess: !this.state.isSuccess})}} severity=\"success\">Đã thêm sách vào giỏ hàng.\r\n                                <Link to=\"/shoppingCart\" className=\"link\"> Chuyển đến giỏ hàng!\r\n                                </Link>\r\n                                </Alert>\r\n                            ) : (null)\r\n                        }\r\n                    </div>\r\n                    <div className=\"listBook\">\r\n                    <BookSlider data_key={this.props.match.params.categorieID} categories={\"Sách cùng thể loại\"}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BookDetail);","import React, { Component } from 'react';\r\nimport './Calculate.css';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Calculate extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            redirect: false,\r\n            shipping: false,\r\n            totalPrice: 0,\r\n            totalItem: 0,\r\n        };\r\n        this.order = this.order.bind(this);\r\n        this.cancelCheckout = this.cancelCheckout.bind(this);\r\n        this.shipping = this.shipping.bind(this);\r\n    }\r\n    \r\n    order() {\r\n        if(this.props.cookies.get('isLogin')&&this.props.cart&&this.props.cart.length !== 0){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/validate',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({cart: this.props.cart})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let cart=[];\r\n                json.cart.items.map(item => cart.push({\r\n                    id: item.book._id, \r\n                    image: item.book.image, \r\n                    name: item.book.name, \r\n                    price: item.book.price, \r\n                    quant: item.quant\r\n                }));\r\n                this.setState({success: !this.state.success});\r\n                this.props.cookies.set('shoppingCart', cart);\r\n                this.props.cookies.set('total', json.cart.total);\r\n                \r\n            })\r\n        } else {\r\n            this.setState({redirect: true});\r\n        }\r\n    }\r\n\r\n    \r\n    cancelCheckout() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({cart: this.props.cart})\r\n        })\r\n        this.setState({success: false});\r\n    }\r\n\r\n    shipping() {\r\n        this.setState({shipping: true});\r\n    }\r\n    \r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        let totalPrice = 0;\r\n        let totalItem = 0;\r\n        this.props.cart&&this.props.cart.map(item => totalPrice += item.quant*item.price);\r\n        this.props.cart&&this.props.cart.map(item => totalItem += item.quant*1);\r\n        this.setState({totalPrice});\r\n        this.setState({totalItem});\r\n    }\r\n    componentWillUnmount(){\r\n        if(!this.state.shipping){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({cart: this.props.cart})\r\n            })\r\n        }\r\n    }\r\n    // componentWillReceiveProps(){}\r\n\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(this.state.shipping){\r\n            return(<Redirect to='/shipping'/>);\r\n        }\r\n\r\n        if(this.state.success){\r\n            return(\r\n                <div className=\"Calculate\">\r\n                    <div className=\"order\">\r\n                        <button onClick={this.cancelCheckout} className=\"btn-order\">Trở lại</button>\r\n                    </div>\r\n                    <div className=\"order\">\r\n                        <button className=\"btn-order\" onClick={this.shipping}>Xác nhận</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if(this.state.redirect){\r\n            return(<Redirect to='/signin'/>);\r\n        }\r\n        return (\r\n            <div className=\"Calculate\">\r\n                <div className=\"calculated-money\">\r\n                    <div className=\"qua\">\r\n                        Tổng số sản phẩm: {this.state.totalItem}\r\n                    </div>\r\n                    <div className=\"prices-items\">\r\n                        Tạm tính: {this.state.totalPrice}\r\n                    </div>\r\n                    <div className=\"prices-total\">\r\n                        Thành tiền: {this.state.totalPrice}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"order\">\r\n                    <button className=\"btn-order\" onClick={this.order}>Tiến hành đặt hàng</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculate;","import React, { Component } from 'react';\r\nimport './ShoppingCartItem.css';\r\nimport Cookies from 'universal-cookie';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faTimes } from '@fortawesome/free-solid-svg-icons'\r\nclass ShoppingCartItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n        };\r\n        this.updateItemQuant = this.updateItemQuant.bind(this);\r\n        this.deleteBookfromCart = this.deleteBookfromCart.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    updateItemQuant(e){\r\n        const quant = e.target.value;\r\n        if(quant > 0){\r\n            let cart = this.state.cookies.get('shoppingCart');\r\n            for(let i=0;i<cart.length;i++){\r\n                if(cart[i].id === this.props.book.id){\r\n                    cart[i].quant = quant;\r\n                    break;\r\n                }\r\n            }\r\n            this.state.cookies.set('shoppingCart', cart);\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n    deleteBookfromCart(){\r\n        let cart = this.state.cookies.get('shoppingCart');\r\n        for(let i=0;i<cart.length;i++){\r\n            if(cart[i].id === this.props.book.id){\r\n                cart.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.state.cookies.set('shoppingCart', cart);\r\n        window.location.reload(false);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ShoppingCartItem\">\r\n                <div className=\"img\"><img width='100%' height='100%' src={`https://bbook-backend.herokuapp.com/`+this.props.book.image} alt={'booktitle'}/></div>\r\n                <div className=\"nameBook\">{this.props.book.name}</div>\r\n                <div className=\"comboPriceQual\">\r\n                <div className=\"bold\">Số lượng: <input onChange={this.updateItemQuant} min=\"1\" type=\"number\" className=\"input\" defaultValue={this.props.book.quant}/></div>\r\n                <div className=\"bold\">Đơn giá: <span className=\"red\">{this.props.book.price} đ</span> </div>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.deleteBookfromCart} className=\"btn-del\"><FontAwesomeIcon icon={faTimes}/></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCartItem;","import React, { Component } from 'react';\r\nimport './ShoppingCart.css';\r\nimport Calculate from './Calculate/Calculate';\r\nimport ShoppingCartItem from './ShoppingCartItem/ShoppingCartItem';\r\n\r\nclass ShoppingCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cart: this.props.cookies.get('shoppingCart'),\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"ShoppingCart\">\r\n                    <h3 className=\"shopping-cart-title\">GIỎ HÀNG</h3>\r\n                    <div className=\"list-product\">\r\n                        {\r\n                            this.state.cart && this.state.cart.map(item => (\r\n                                <ShoppingCartItem key={item.id} book={item}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <Calculate cookies={this.props.cookies} cart={this.state.cart}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCart;","import React, { Component } from 'react';\r\nimport './CreateExchangeBook.css';\r\nimport * as Yup from 'yup'\r\nimport { Formik } from 'formik';\r\nimport { Redirect } from 'react-router-dom';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 500,\r\n        },\r\n    },\r\n};\r\nclass CreateExchangeBook extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userBooks: [],\r\n            storeBooks: [],\r\n            isDisable: false,\r\n            value: [],\r\n        };\r\n        this.loadUserBooks = this.loadUserBooks.bind(this);\r\n        this.loadStoreBooks = this.loadStoreBooks.bind(this);\r\n        this.postTrade = this.postTrade.bind(this);\r\n        \r\n    }\r\n    handleChange = (evt) => {\r\n        this.setState({\r\n            value: evt.target.value\r\n        });\r\n    };\r\n    \r\n    \r\n    loadUserBooks() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/books/stash',{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                this.setState({userBooks: json.books.books});\r\n                if(this.state.userBooks.length === 0){\r\n                    this.setState({isDisable: true});\r\n                }\r\n            }\r\n        })\r\n    }\r\n    loadStoreBooks() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book',{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                this.setState({storeBooks: json.books});\r\n            }\r\n        })\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        this.loadUserBooks();\r\n        this.loadStoreBooks();\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    postTrade(values, actions) {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/traderq', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({\r\n                book: values.userBooks,\r\n                interested: this.state.value,\r\n                message: values.message\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                actions.setSubmitting(false);\r\n                console.log(json.traderq);\r\n            }\r\n            else{\r\n                console.log('post trade fail')\r\n            }\r\n        })\r\n        actions.setSubmitting(false);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"CreateExchangeBook\">\r\n                    <Formik\r\n                        initialValues={{userBooks: '', message: ''}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.postTrade(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            userBooks: Yup.string()\r\n                                .required('Email is empty'),\r\n                        })}\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <form autoComplete=\"off\" onSubmit={props.handleSubmit} className=\"createEx\">\r\n                                        <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng ký đổi sách</h1>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div style={{textAlign: \"center\"}} className=\"font-white\" >Sách để đổi</div>\r\n                                                {props.touched.email && props.errors.email? (\r\n                                                    <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input \r\n                                                disabled={this.state.isDisable}\r\n                                                list=\"listUserBooks\" \r\n                                                name=\"userBooks\" \r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.userBooks}/>\r\n                                            <datalist id=\"listUserBooks\">\r\n                                                {\r\n                                                    this.state.userBooks&&this.state.userBooks.map(book => (\r\n                                                        <option key={book._id} value={book._id}>{book.name}</option>\r\n                                                    ))\r\n                                                }\r\n                                            </datalist>\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div className=\"font-white\">Sách muốn đổi</div>\r\n                                                {props.touched.password && props.errors.password? (\r\n                                                    <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                                ) : null}\r\n                                                \r\n                                            </div>\r\n                                            {/* <input\r\n                                                list=\"listStoreBooks\" \r\n                                                name=\"storeBooks\" \r\n                                                onChange={this.handleChange}\r\n                                                value={this.state.value}\r\n                                                multiple\r\n                                                data-list-filter=\"^\"/>\r\n                                            <datalist id=\"listStoreBooks\">\r\n                                                <select>\r\n                                                {\r\n                                                    this.state.storeBooks&&this.state.storeBooks.map(book => (\r\n                                                        <option key={book._id} value={book.name}/>\r\n                                                    ))\r\n                                                }\r\n                                                </select>\r\n                                            </datalist> */}\r\n                                            <Select\r\n                                                className=\"MultipleSelect\"\r\n                                                labelId=\"demo-mutiple-chip-label\"\r\n                                                id=\"demo-mutiple-chip\"\r\n                                                multiple\r\n                                                value={this.state.value}\r\n                                                onChange={this.handleChange}\r\n                                                MenuProps={MenuProps}\r\n                                                >\r\n                                                {\r\n                                                    this.state.storeBooks.map(book => (\r\n                                                        <MenuItem key={book._id} value={book._id}>\r\n                                                            {book.name}\r\n                                                        </MenuItem>\r\n                                                    ))\r\n                                                }\r\n                                            </Select>\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div className=\"font-white\">Lời nhắn</div>\r\n                                            </div>\r\n                                            <input \r\n                                                type=\"text\"\r\n                                                value={props.values.message}\r\n                                                name=\"message\"\r\n                                                onChange={props.handleChange}/>\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng\"/>\r\n                                        \r\n                                    </form>\r\n                                )\r\n                            }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateExchangeBook;","import React, { Component } from 'react';\r\nimport './UserBookStorage.css';\r\nimport ItemExchange from '../ItemExchange/ItemExchange';\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass UserBookStorage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            books: []\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.state.cookies.get('isLogin')){\r\n            return(<Redirect path='/'/>)\r\n        }\r\n        return (\r\n            <div className=\"UserBookStorage\">\r\n                    {\r\n                        this.state.books.map(book => (\r\n                            <div key={book._id} className=\"item-box\">\r\n                                <ItemExchange  key_data={book._id} image={book.image} name={book.name} owner={book.owner} price={book.price}/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserBookStorage;","import React, { Component } from 'react';\r\nimport './ViewBookExchange.css';\r\nimport { Redirect, Link} from 'react-router-dom';\r\nimport ItemExchange from '../ItemExchange/ItemExchange';\r\nclass ViewBookExchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: []\r\n        };\r\n    }\r\n\r\n  // componentWillMount(){}\r\n  // componentDidMount(){}\r\n  // componentWillUnmount(){}\r\n\r\n  // componentWillReceiveProps(){}\r\n  // shouldComponentUpdate(){}\r\n  // componentWillUpdate(){}\r\n  // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect path='/'/>)\r\n        }\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"ViewBookExchange\">\r\n                    <Link  className=\"post-trade-book\"to=\"/exchange/create/book\">Đăng ký đổi sách</Link>\r\n                    {\r\n                        this.state.books.map(book => (\r\n                            <div key={book._id} className=\"item-box\">\r\n                                <ItemExchange  key_data={book._id} image={book.image} name={book.name} owner={book.owner} price={book.price}/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewBookExchange;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from '../HeaderBar/HeaderBar';\r\nimport SignIn from '../Auth/SignIn/SignIn';\r\nimport {\r\n    HashRouter,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport SignUp from '../Auth/SignUp/SignUp';\r\nimport Home from '../Home/Home';\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\nimport ResetPassword from '../ResetPassword/ResetPassword'\r\nimport Exchange from '../Exchange/Exchange';\r\nimport SearchBook from '../Home/SearchBook/SearchBook';\r\nimport SideBar from '../Home/SideBar/SideBar';\r\nimport Shipping from '../Home/Shipping/Shipping';\r\nimport BookDetail from '../Home/BookDetail/BookDetail';\r\nimport ShoppingCart from '../Home/ShoppingCart/ShoppingCart';\r\nimport CreateExchangeBook from '../CreateExchangeBook/CreateExchangeBook';\r\nimport UserBookStorage from '../Exchange/UserBookStorage/UserBookStorage'\r\nimport ViewBookExchange from '../Exchange/ViewBookExchange/ViewBookExchange';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            isLogin: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.LoginLogout = this.LoginLogout.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/category')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({categories: json.categories});\r\n        })\r\n    }\r\n\r\n    LoginLogout(isLogin) {\r\n        this.setState({isLogin});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"background-image\">\r\n                    <div className=\"background-content\">\r\n                        <HashRouter>\r\n                            <HeaderBar LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                            <Switch>\r\n                                <Route exact path='/signin' >\r\n                                    <SignIn LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/signup'>\r\n                                    <SignUp LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/reset/:tokenId'>\r\n                                    <ResetPassword cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/exchange'>\r\n                                    <Exchange/>\r\n                                </Route>\r\n                                <Route exact path='/shoppingCart'>\r\n                                    <ShoppingCart cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path=\"/:categorieID/:bookId\">\r\n                                    <BookDetail cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path=\"/shipping\">\r\n                                    <Shipping cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/search/:category/books'>\r\n                                    <div className='container'>\r\n                                        <SideBar categories={this.state.categories}/>\r\n                                        <SearchBook/>\r\n                                    </div>\r\n                                </Route>\r\n                                <Route exact path='/exchange/viewbook/exchange'>\r\n                                    <ViewBookExchange cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/exchange/create/book'>\r\n                                    <CreateExchangeBook cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/viewbookstorage'>\r\n                                    <UserBookStorage cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/'>\r\n                                    <Home/>\r\n                                </Route>\r\n                                <Route component={ErrorPage}/>\r\n                            </Switch>\r\n                        </HashRouter>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/shoppingCart.891cbcab.png\";"],"sourceRoot":""}