{"version":3,"sources":["Components/HeaderBar/PopupChangePassword/PopupChangePassword.js","Components/HeaderBar/HeaderBar.js","Components/Auth/SignIn/PopupForgotPassword/PopupForgotPassword.js","Components/Auth/SignIn/SignIn.js","Components/Auth/SignUp/SignUp.js","Components/Home/SideBar/Category/Category.js","Components/Home/SideBar/SideBar.js","Components/Home/BookSlider/Item/Item.js","Components/Home/BookSlider/BookSlider.js","Components/Home/Home.js","Components/ErrorPage/ErrorPage.js","Components/ResetPassword/ResetPassword.js","Components/Exchange/Exchange.js","Components/Home/SearchBook/SearchBook.js","Components/Home/Shipping/UpdateShippingInfor/UpdateShippingInfor.js","Components/Home/Shipping/Shipping.js","Components/Home/BookDetail/BookDetail.js","Components/Home/ShoppingCart/Calculate/Calculate.js","Components/Home/ShoppingCart/ShoppingCartItem/ShoppingCartItem.js","Components/Home/ShoppingCart/ShoppingCart.js","Components/App/App.js","serviceWorker.js","index.js","img/shoppingCart.png"],"names":["PopupChangePassword","props","handleClick","toggle","state","errorMessage","hidePass","hidenewPass","hideretypePass","changePassword","bind","hideStatePass","hideStatenewPass","hideStateretypePass","values","actions","newPassword","retypePass","this","setState","eye_Pass","faEye","faEyeSlash","eye_newPass","eye_retypePass","className","onClick","initialValues","oldPassword","onSubmit","validationSchema","Yup","min","required","handleSubmit","type","onChange","handleChange","value","name","placeholder","icon","disabled","isSubmitting","Component","HeaderBar","cookies","Cookies","isOpen","logout","togglePopup","seen","fetch","method","remove","LoginLogout","get","to","src","ShoppingCart","width","height","alt","PopupForgotPassword","forgotPassword","headers","body","JSON","stringify","email","then","res","json","success","message","SignIn","redirect","loginProvider","login","password","status","text","setSubmitting","set","token","maxAge","httpOnly","user","provider","uid","googleId","Tt","Bd","Du","style","textAlign","touched","errors","cursor","clientId","buttonText","onSuccess","onFailure","console","log","SignUp","signup","fullname","phone","phoneNumber","toString","moreThan","positive","Category","reloadPage","window","location","reload","key_data","category","toUpperCase","SideBar","onMouseLeave","closeDropdown","onMouseEnter","openDropdown","categories","map","item","key","_id","Item","categorieID","color","image","author","price","breakPoints","itemsToShow","itemsToScroll","BookSlider","books","data_key","pointer","length","transitionMs","disableArrowsOnEnd","renderArrow","myArrow","book","Home","ErrorPage","ResetPassword","match","params","tokenId","withRouter","Exchange","path","SearchBook","UpdateShippingInfor","updateAddress","updatePhone","address","closeUpdate","Shipping","openUpdateInf","ship","cart","items","total","destination","numbers","alert","BookDetail","isSuccess","element","expel","add","addToShoppingCart","indexOf","shoppingCart","included","index","id","bookId","quant","push","faShoppingCart","Alert","variant","onClose","severity","Calculate","shipping","totalPrice","totalItem","order","cancelCheckout","ShoppingCartItem","updateItemQuant","deleteBookfromCart","e","target","i","splice","defaultValue","faTimes","App","isLogin","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.17ad1ca3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './PopupChangePassword.css';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nclass PopupChangePassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            hidePass: true,\r\n            hidenewPass:true,\r\n            hideretypePass:true,\r\n        };\r\n        this.changePassword = this.changePassword.bind(this);\r\n        this.hideStatePass = this.hideStatePass.bind(this);\r\n        this.hideStatenewPass = this.hideStatenewPass.bind(this);\r\n        this.hideStateretypePass = this.hideStateretypePass.bind(this);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    \r\n    changePassword(values, actions){\r\n        if(values.newPassword === values.retypePass){\r\n            // fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/forgot', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'Content-Type': 'application/json'\r\n            //     },\r\n            //     body: JSON.stringify({email: values.email})\r\n            // })\r\n            // .then(res => res.json())\r\n            // .then(json => {\r\n            //     if(!json.success){\r\n\r\n            //     } else {\r\n\r\n            //         this.setState({errorMessage: json.message});\r\n            //     }\r\n            // })\r\n        }\r\n    }\r\n    hideStatePass(){\r\n        const{ hidePass } = this.state;\r\n        if (hidePass){\r\n        this.setState({\r\n            hidePass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hidePass:true\r\n            })\r\n        }\r\n    }\r\n    hideStatenewPass(){\r\n        const{ hidenewPass } = this.state;\r\n        if (hidenewPass){\r\n        this.setState({\r\n            hidenewPass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hidenewPass:true\r\n            })\r\n        }\r\n    }\r\n    hideStateretypePass(){\r\n        const{ hideretypePass } = this.state;\r\n        if (hideretypePass){\r\n        this.setState({\r\n            hideretypePass:false\r\n        })}\r\n        else{\r\n            this.setState({\r\n                hideretypePass:true\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const eye_Pass = this.state.hidePass ? faEye : faEyeSlash;\r\n        const eye_newPass = this.state.hidenewPass ? faEye : faEyeSlash;\r\n        const eye_retypePass = this.state.hideretypePass ? faEye : faEyeSlash;\r\n        return (\r\n            <div className=\"PopupChangePassword\" >\r\n                <div className=\"PopupChangePassword-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                        initialValues={{oldPassword: '', newPassword: '', retypePass: ''}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.changePassword(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            oldPassword: Yup.string()\r\n                                .min(8, 'To short!!!')\r\n                                .required('Điền mật khẩu cũ'),\r\n                            newPassword: Yup.string()\r\n                                .min(8, 'To short!!!')    \r\n                                .required('Điền mật khẩu mới'),\r\n                            retypePass: Yup.string()\r\n                                .min(8, 'To short!!!')\r\n                                .required('Nhập lại mật khẩu mới')\r\n                        })}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Đổi mật khẩu</h2>\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hidePass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.oldPassword}\r\n                                            name=\"oldPassword\"\r\n                                            placeholder=\"Mật khẩu cũ\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_Pass} onClick={this.hideStatePass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hidenewPass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.newPassword}\r\n                                            name=\"newPassword\"\r\n                                            placeholder=\"Mật khẩu mới\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_newPass} onClick={this.hideStatenewPass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                        <input className=\"input-email\"\r\n                                            type={this.state.hideretypePass ? \"password\" : \"text\"}\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.retypePass}\r\n                                            name=\"retypePass\"\r\n                                            placeholder=\"Xác nhận mật khẩu mới\"\r\n                                        />\r\n                                        <FontAwesomeIcon icon={eye_retypePass} onClick={this.hideStateretypePass} className=\"eye\"/>\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Xác nhận\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupChangePassword;","import React, { Component } from 'react';\r\nimport './HeaderBar.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport ShoppingCart from '../../img/shoppingCart.png'\r\nimport PopupChangePassword from './PopupChangePassword/PopupChangePassword'\r\nclass HeaderBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n            isOpen: false\r\n        };\r\n        this.logout = this.logout.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    logout() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/signout',{method: 'POST'});\r\n        // const auth2 = window.gapi.auth2.getAuthInstance();\r\n        // if (auth2 != undefined|| auth2 != null) {\r\n        //     auth2.signOut().then(() => {\r\n        //             auth2.disconnect().then(this.props.onLogoutSuccess);\r\n        //         }\r\n        //     )\r\n        // }\r\n        this.state.cookies.remove('isLogin');\r\n        this.state.cookies.remove('u_t');\r\n        this.state.cookies.remove('m_inf_u');\r\n        this.props.LoginLogout(false);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (\r\n                <div className=\"header-bbook\">\r\n                    <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                    <Link to='/exchange' className=\"header-item cursor-pointer\">Trao đổi</Link>\r\n                    <Link to='/exchange/create/yourbook' className=\"header-item cursor-pointer\">Đăng ký đổi sách </Link>\r\n                    <Link to='/kho' className=\"header-item cursor-pointer\">Sách của bạn</Link>\r\n                    <div className=\"signin-signup-layout\">\r\n                    <div className=\"flexbox\">\r\n                        <div className=\"search\">\r\n                            <div>\r\n                            <input type=\"text\" placeholder=\"       Search . . .\" required/>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                            <div className=\"header-item dropdown\">\r\n                                <span className=\"dropbtn\">{this.state.cookies.get('m_inf_u')&&this.state.cookies.get('m_inf_u').name}</span>\r\n                                <div className=\"dropdown-content\">\r\n                                    <div className=\"link cursor-pointer\"onClick={this.togglePopup}>\r\n                                        Đổi mật khẩu\r\n                                    </div>\r\n                                    <div className=\"link\"onClick={this.logout}>Đăng xuất</div>\r\n                                </div>\r\n                            </div>        \r\n                        <div className=\"header-item\">\r\n                            <Link to=\"/shoppingCart\">\r\n                                <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.seen ? <PopupChangePassword toggle={this.togglePopup} /> : null\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"header-bbook\">\r\n                <Link to='/' className=\"bbook-logo\">BBOOK</Link>\r\n                <div className=\"signin-signup-layout\">\r\n                    <Link to='/signin'><div className=\"header-item\">Đăng nhập</div></Link>\r\n                    <Link to='/signup'><div className=\"header-item\">Đăng kí</div></Link>\r\n                    <div className=\"header-item\">\r\n                        <Link to=\"/shoppingCart\">\r\n                            <img src={ShoppingCart} width=\"30\" height=\"30\" alt={'shoppingCart'}/>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderBar;","import React, { Component } from 'react';\r\nimport './PopupForgotPassword.css';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nclass PopupForgotPassword extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n        };\r\n        this.forgotPassword = this.forgotPassword.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    handleClick = () => {\r\n        this.props.toggle();\r\n    };\r\n\r\n    \r\n    forgotPassword(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/forgot', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email})\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            } else {\r\n\r\n                this.setState({errorMessage: json.message});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PopupForgotPassword\" >\r\n                <div className=\"PopupForgotPassword-content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n                    <Formik\r\n                    initialValues={{email: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.forgotPassword(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty')\r\n                    })}>\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h2>Quên mật khẩu?</h2>\r\n                                    <div>Vui lòng nhập email đăng nhập để lấy lại mật khẩu</div>\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <input className=\"input-email-forgotpass\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Gửi\"/>\r\n                                    </form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupForgotPassword;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignIn.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie'\r\nimport GoogleLogin from 'react-google-login';\r\nimport PopupForgotPassword from './PopupForgotPassword/PopupForgotPassword'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies(),\r\n            seen: false\r\n        };\r\n        this.loginProvider = this.loginProvider.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.togglePopup = this.togglePopup.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    togglePopup() {\r\n        this.setState({seen: !this.state.seen});\r\n    }\r\n\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/email',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 36000000, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    loginProvider(res){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/auth-provider',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                provider: \"google\",\r\n                uid: res.googleId, \r\n                name: res.Tt.Bd, \r\n                email: res.Tt.Du})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 86400, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 86400, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 86400, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignIn\">\r\n                <Formik\r\n                    initialValues={{email: '', password: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.login(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string()\r\n                            .required('Email is empty'),\r\n                        password: Yup.string()\r\n                            .min(8, 'To short!!!')\r\n                            .required('Password is empty'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signin-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Nhập</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div style={{textAlign: \"center\"}} className=\"font-white\" >Email (Tên Đăng Nhập)</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-white\" style={{cursor: 'pointer'}} onClick={this.togglePopup}>Quên mật khẩu</div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Nhập\"/>\r\n                                    <GoogleLogin\r\n                                        clientId=\"639654572878-40oqbl8t2cj3dvjv8vj9othe1he9oepv.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\r\n                                        buttonText=\"LOGIN WITH GOOGLE\"\r\n                                        onSuccess={(res) => this.loginProvider(res)}\r\n                                        onFailure={(res) => {console.log(res)}}\r\n                                    />\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n                {\r\n                    this.state.seen ? <PopupForgotPassword toggle={this.togglePopup} /> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport './SignUp.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: '',\r\n            redirect: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.signup = this.signup.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    login(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/auth/email',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({email: values.email, password: values.password})\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                res.json().then(json => {\r\n                    this.state.cookies.set('u_t', json.token, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('m_inf_u', json.user, {maxAge: 36000000, httpOnly: false});\r\n                    this.state.cookies.set('isLogin', 'login', {maxAge: 36000000, httpOnly: false});\r\n                    this.props.LoginLogout(true);\r\n                    this.setState({redirect: true});\r\n                })\r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    signup(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/register/email',{\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    name: values.fullname, \r\n                    password: values.password,\r\n                    email: values.email,\r\n                    phone: values.phoneNumber.toString(),\r\n                }\r\n            )\r\n        })\r\n        .then(res => {\r\n            if(res.status === 400) {\r\n                res.text().then(text => this.setState({errorMessage: text}));\r\n                actions.setSubmitting(false);\r\n            } else if (res.status === 200) {\r\n                // this.props.LoginLogout(true);\r\n                // this.setState({redirect: true});\r\n                this.login(values, actions);\r\n                \r\n            } else {\r\n                this.setState({errorMessage: 'Lỗi không xác định!!!'});\r\n                actions.setSubmitting(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        if(this.state.cookies.get('isLogin')){\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"SignUp\">\r\n                <Formik\r\n                    initialValues={{fullname: '', email: '', password: '',phoneNumber: ''}}\r\n                    onSubmit={(values, actions) => {\r\n                        this.signup(values, actions);\r\n                    }}\r\n                    validationSchema={Yup.object({\r\n                        fullname: Yup.string()\r\n                            .required('Tên người dùng còn trống'),\r\n                        email: Yup.string()\r\n                            .email('Email không hợp lệ')\r\n                            .required('Email không được để trống'),\r\n                        password: Yup.string()\r\n                            .min(8, 'Quá ngắn!!!')\r\n                            .required('Mật khẩu không được để trống'),\r\n                        phoneNumber: Yup.number()\r\n                            .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                            .positive('không được có kí tự trong sđt'),\r\n                    })}\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <form onSubmit={props.handleSubmit} className=\"signup-form\">\r\n                                    <h1 style={{textAlign: \"center\"}} className=\"font-white\">Đăng Kí</h1>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Tên Đăng Nhập</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.fullname}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"text\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.fullname}\r\n                                            name=\"fullname\"\r\n                                            placeholder=\"Hãy nhập họ và tên\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Email</div>\r\n                                            {props.touched.email && props.errors.email? (\r\n                                                <div className=\"invalid-message\">{props.errors.email}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"email\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.email}\r\n                                            name=\"email\"\r\n                                            placeholder=\"Hãy nhập email của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Mật Khẩu</div>\r\n                                            {props.touched.password && props.errors.password? (\r\n                                                <div className=\"invalid-message\">{props.errors.password}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"password\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.password}\r\n                                            name=\"password\"\r\n                                            placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-item\">\r\n                                        <div className=\"form-item-header\">\r\n                                            <div className=\"font-white\">Số điện thoại</div>\r\n                                            {props.touched.phoneNumber && props.errors.phoneNumber? (\r\n                                                <div className=\"invalid-message\">{props.errors.phoneNumber}</div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <input className=\"form-input\"\r\n                                            type=\"number\"\r\n                                            onChange={props.handleChange}\r\n                                            value={props.values.phoneNumber}\r\n                                            name=\"phoneNumber\"\r\n                                            placeholder=\"0xxxxx\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                    <input type=\"submit\" disabled={props.isSubmitting} value=\"Đăng Kí\"/>\r\n                                </form>\r\n                            )\r\n                        }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, {Component} from 'react';\r\nimport './Category.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Category extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div onClick={this.reloadPage}>\r\n                <Link to={`/search/${this.props.key_data}/books`}>\r\n                    <div className=\"category-item\">\r\n                        {this.props.category.toUpperCase()}\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;","import React, { Component } from 'react';\r\nimport './SideBar.css';\r\nimport Category from './Category/Category';\r\n\r\nclass SideBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    openDropdown() {\r\n        this.setState({isOpen: true});\r\n    }\r\n\r\n    closeDropdown() {\r\n        this.setState({isOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SideBar\" onMouseLeave={() => this.closeDropdown()}>\r\n                <div className=\"sidebar-header\"\r\n                    onMouseEnter={() => this.openDropdown()}>\r\n                    TẤT CẢ DANH MỤC\r\n                </div>\r\n                {\r\n                    this.state.isOpen ? (\r\n                        <div className=\"sidebar-body\">\r\n                            {\r\n                                this.props.categories.map(item => (\r\n                                    <Category key={item._id} key_data={item._id} category={item.name}/>\r\n                                ))\r\n                            }\r\n                        </div>  \r\n                    ) : (\r\n                        <div/>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport './Item.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Item extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.reloadPage = this.reloadPage.bind(this);\r\n    }\r\n    reloadPage(){\r\n        window.location.reload(false);\r\n    }\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"avatar-item\" onClick={this.reloadPage}>\r\n                    <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                        <img src={`https://bbook-backend.herokuapp.com/${this.props.image}`} width=\"100%\" height=\"100%\" alt={'BookTitle'}/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"infor-item\">\r\n                    <div onClick={this.reloadPage}>\r\n                        <Link to={`/${this.props.categorieID}/${this.props.key_data}`} style={{width: '70%', color: 'yellow'}}>\r\n                            {this.props.name}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"author\" >\r\n                        {this.props.author}\r\n                    </div>\r\n                    <div>\r\n                        Giá: {this.props.price}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from 'react';\r\nimport './BookSlider.css';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Item from './Item/Item'\r\n\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 5, itemsToScroll: 5},\r\n];\r\n\r\nclass BookSlider extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/' + this.props.data_key)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success){\r\n\r\n            }\r\n            else {\r\n                this.setState({books: json.books});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    myArrow({ type, onClick}) {\r\n        const pointer = type === 'PREV' ? '❮' : '❯';\r\n        return (\r\n            <button onClick={onClick} className=\"button-slider\">\r\n                {pointer}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if(this.state.books.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"BookSlider\">\r\n                <div className=\"book-slider-title\">{this.props.categories.toUpperCase()}</div>\r\n                <Carousel breakPoints={breakPoints} transitionMs={2000} disableArrowsOnEnd={false} renderArrow={this.myArrow}>\r\n                    {\r\n                        this.state.books.map(book => (\r\n                            <Item categorieID={this.props.data_key} key={book._id} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                        ))\r\n                    }\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookSlider;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport Cookies from 'universal-cookie';\r\nimport SideBar from './SideBar/SideBar';\r\nimport BookSlider from './BookSlider/BookSlider';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            cookies: new Cookies()\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/category')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({categories: json.categories});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    // logout() {\r\n    //     fetch('/user/logout',{method: 'POST'});\r\n    //     this.state.cookies.remove('mUser');\r\n    //     this.props.LoginLogout(false);\r\n    //     this.setState({redirect: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <SideBar categories={this.state.categories}/>\r\n                <div style={{width: '100%'}}>\r\n                    {\r\n                        this.state.categories.map(item => (\r\n                            <BookSlider key={item._id} data_key={item._id} categories={item.name}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './ErrorPage.css';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass ErrorPage extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-up-form\">\r\n                <div className=\"message\">404 PAGE NOT FOUND</div>\r\n                <div>\r\n                    <Link to=\"/\"><div className=\"header-item\">RETURN</div></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport './ResetPassword.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ResetPassword extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n        // this.state = {};\r\n    // }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        \r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"text-white\">\r\n                    {this.props.match.params.tokenId}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ResetPassword);","import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport './Exchange.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Exchange extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(!this.state.cookies.get('isLogin')){\r\n            return(<Redirect path='/'/>)\r\n        }\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Exchange;","import React, { Component } from 'react';\r\nimport './SearchBook.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Item from '../BookSlider/Item/Item';\r\n\r\nclass SearchBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            books: []\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/category/'+this.props.match.params.category)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({books: json.books});\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBook\">\r\n                {\r\n                    this.state.books.map(book => (\r\n                        <div key={book._id} className=\"item-box\">\r\n                            <Item categorieID={this.props.match.params.category} key_data={book._id} image={book.image} name={book.name} author={book.author} price={book.price}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchBook);","import React, { Component } from 'react';\r\nimport './UpdateShippingInfor.css';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nclass UpdateShippingInfor extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            errorMessage: ''\r\n        };\r\n        this.updateAddress = this.updateAddress.bind(this);\r\n        this.updatePhone = this.updatePhone.bind(this);\r\n    }\r\n    updateAddress(values, actions){\r\n        console.log(values.address)\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/address',{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t') \r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    address: values.address,\r\n                }\r\n            )\r\n        })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n            if(json.success){\r\n                this.updatePhone(values, actions);\r\n            }else {\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n    updatePhone(values, actions){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/user/numbers',{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    phone: values.phone,\r\n                }\r\n            )\r\n        })\r\n        .then(res => res.json())\r\n        .then((json) => {\r\n            if(json.success){\r\n                this.props.cookies.set('m_inf_u', json.user);\r\n                this.props.closeUpdate();\r\n            }else {\r\n                actions.setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"UpdateShippingInfor\">\r\n                <div className=\"updateShippingInfor-content\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            address: this.props.cookies.get('m_inf_u').address,\r\n                            phone: this.props.cookies.get('m_inf_u').phone}}\r\n                        onSubmit={(values, actions) => {\r\n                            this.updateAddress(values, actions);\r\n                        }}\r\n                        validationSchema={Yup.object({\r\n                            address: Yup.string()\r\n                                .required('address is empty'),\r\n                            phone: Yup.number()\r\n                                .required('Số điện thoại không được để trống')\r\n                                .moreThan(99999999, 'Số điện thoại ít nhất 9 chữ số')\r\n                                .positive('không được có kí tự trong sđt'),\r\n                        })}\r\n                        >\r\n                            {\r\n                                props => (\r\n                                    <form onSubmit={props.handleSubmit}>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div style={{textAlign: \"center\"}}>Địa chỉ</div>\r\n                                                {props.touched.address && props.errors.address? (\r\n                                                    <div className=\"invalid-message\">{props.errors.address}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input className=\"form-input\"\r\n                                                type=\"text\"\r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.address}\r\n                                                name=\"address\"\r\n                                                placeholder=\"Hãy nhập địa chỉ của bạn\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-item\">\r\n                                            <div className=\"form-item-header\">\r\n                                                <div>Số điện thoại</div>\r\n                                                {props.touched.phone && props.errors.phone? (\r\n                                                    <div className=\"invalid-message\">{props.errors.phone}</div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <input className=\"form-input\"\r\n                                                type=\"phone\"\r\n                                                onChange={props.handleChange}\r\n                                                value={props.values.phone}\r\n                                                name=\"phone\"\r\n                                                placeholder=\"Hãy nhập mật khẩu của bạn\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"error-message\">{this.state.errorMessage}</div>\r\n                                        <input type=\"submit\" disabled={props.isSubmitting} value=\"Gửi\"/>\r\n                                    </form>\r\n                                )\r\n                            }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateShippingInfor;","import React, { Component } from 'react';\r\nimport './Shipping.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UpdateShippingInfor from './UpdateShippingInfor/UpdateShippingInfor'\r\n\r\nclass Shipping extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n        this.openUpdateInf = this.openUpdateInf.bind(this);\r\n        this.ship = this.ship.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    componentWillUnmount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({cart: this.props.cookies.get('shoppingCart')})\r\n        })\r\n    }\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    ship(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/transaction',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({\r\n                items: this.props.cookies.get('shoppingCart'),\r\n                total:this.props.cookies.get('total'),\r\n                destination: this.props.cookies.get('m_inf_u').address,\r\n                numbers: this.props.cookies.get('m_inf_u').phone\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success){\r\n                alert('Đang vận chuyển')\r\n            }\r\n        })\r\n    }\r\n\r\n    openUpdateInf(){\r\n        this.setState({isOpen: !this.state.isOpen});\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.cookies.get('isLogin')){\r\n            return(<Redirect to=\"/\"/>)\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"Shipping\">\r\n                    <h3 className=\"shipping-title\">ĐỊA CHỈ GIAO HÀNG</h3>\r\n                    <div className=\"shipping-infor\">\r\n                        <h4 className=\"text-white\">{this.props.cookies.get('m_inf_u').name}</h4>\r\n                        <div className=\"text-white\">\r\n                            Địa chỉ: {this.props.cookies.get('m_inf_u').address}\r\n                        </div>\r\n                        <div className=\"text-white\">\r\n                            Số điện thoại: {this.props.cookies.get('m_inf_u').phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-shipping-layout\">\r\n                        <button onClick={this.ship} className=\"btn-shipping\">Giao tới địa chỉ này</button>\r\n                        <button onClick={this.openUpdateInf} className=\"btn-change-address\">Sửa</button>\r\n                    </div>\r\n                    {\r\n                        this.state.isOpen ? (<UpdateShippingInfor closeUpdate={this.openUpdateInf} cookies={this.props.cookies}/>) : (null)\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shipping;","import React, { Component } from 'react';\r\nimport './BookDetail.css';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faShoppingCart } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom';\r\nimport BookSlider  from '../BookSlider/BookSlider'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nclass BookDetail extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isSuccess: false,\r\n            element: 1,\r\n            book: {}\r\n        };\r\n        this.expel = this.expel.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.addToShoppingCart = this.addToShoppingCart.bind(this);\r\n    }\r\n    expel(){\r\n        if(this.state.element-1 > 0){\r\n            this.setState({\r\n                element: this.state.element-1\r\n            });\r\n        }\r\n    }\r\n    add(){\r\n        this.setState({\r\n            element: this.state.element+1\r\n        });\r\n    }\r\n    addToShoppingCart() {\r\n        const {image, name, price}= this.state.book;\r\n        if(!this.props.cookies.get('shoppingCart')){\r\n            let shoppingCart = [{id: this.props.match.params.bookId, \r\n                image: image,\r\n                name: name,\r\n                price: price, \r\n                quant: this.state.element}];\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n            console.log(shoppingCart)\r\n        } else {\r\n            let shoppingCart = this.props.cookies.get('shoppingCart');\r\n            let included = false;\r\n            let indexOf;\r\n            shoppingCart.map((item, index) => {\r\n                if(item.id === this.props.match.params.bookId){\r\n                    included = true;\r\n                    indexOf = index;\r\n                }\r\n                return true;\r\n            });\r\n            if(included){\r\n                shoppingCart[indexOf].quant += this.state.element;\r\n            } else {\r\n                shoppingCart.push({id: this.props.match.params.bookId,\r\n                    image: image,\r\n                    name: name, \r\n                    price: price, \r\n                    quant: this.state.element});\r\n            }\r\n            this.props.cookies.set('shoppingCart', shoppingCart);\r\n            console.log(shoppingCart)\r\n        }\r\n        this.setState({isSuccess: !this.state.isSuccess});\r\n        \r\n    }\r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/book/title/'+this.props.match.params.bookId)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(!json.success) {\r\n                \r\n            } else {\r\n                this.setState({book: json.book});\r\n            }\r\n        })\r\n    }\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n    \r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"BookDetail\">\r\n                    <div className=\"avatar\">\r\n                        <img src={`https://bbook-backend.herokuapp.com/${this.state.book.image}`} width=\"80%\" height=\"80%\" alt={'BookTitle'}/>\r\n                    </div>\r\n                    <div className=\"book-infor\">\r\n                        <div className=\"book-name text-color-white\">{this.state.book.name}</div>\r\n                        <div className=\"text-color-white author\">Tác giả: {this.state.book.author}</div>\r\n                        <div className=\"text-color-white\">Giá: {this.state.book.price}đ</div>\r\n                        <div className=\"text-color-white\"> Số lượng\r\n                        <div className='groupInput'>\r\n                            <button className=\"btn-expel\" onClick={this.expel}>-</button>\r\n                            <input value={this.state.element} onChange={()=>{}}/>\r\n                            <button className=\"btn-add\" onClick={this.add}>+</button>\r\n                        </div></div>\r\n                        <button className=\"btn-add-to-cart\" onClick={this.addToShoppingCart}>\r\n                            <FontAwesomeIcon icon={faShoppingCart}/>\r\n                            Chọn mua\r\n                        </button>\r\n                        {\r\n                            this.state.isSuccess ? (\r\n                                <Alert variant=\"filled\" className=\"alert\" onClose={()=>{this.setState({isSuccess: !this.state.isSuccess})}} severity=\"success\">Đã thêm sách vào giỏ hàng.\r\n                                <Link to=\"/shoppingCart\" className=\"link\"> Chuyển đến giỏ hàng!\r\n                                </Link>\r\n                                </Alert>\r\n                            ) : (null)\r\n                        }\r\n                    </div>\r\n                    <div className=\"listBook\">\r\n                    <BookSlider data_key={this.props.match.params.categorieID} categories={\"Sách cùng thể loại\"}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(BookDetail);","import React, { Component } from 'react';\r\nimport './Calculate.css';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Calculate extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            success: false,\r\n            redirect: false,\r\n            shipping: false,\r\n            totalPrice: 0,\r\n            totalItem: 0,\r\n        };\r\n        this.order = this.order.bind(this);\r\n        this.cancelCheckout = this.cancelCheckout.bind(this);\r\n        this.shipping = this.shipping.bind(this);\r\n    }\r\n    \r\n    order() {\r\n        if(this.props.cookies.get('isLogin')&&this.props.cart&&this.props.cart.length !== 0){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/validate',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({cart: this.props.cart})\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                let cart=[];\r\n                json.cart.items.map(item => cart.push({\r\n                    id: item.book._id, \r\n                    image: item.book.image, \r\n                    name: item.book.name, \r\n                    price: item.book.price, \r\n                    quant: item.quant\r\n                }));\r\n                this.setState({success: !this.state.success});\r\n                this.props.cookies.set('shoppingCart', cart);\r\n                this.props.cookies.set('total', json.cart.total);\r\n                \r\n            })\r\n        } else {\r\n            this.setState({redirect: true});\r\n        }\r\n    }\r\n\r\n    \r\n    cancelCheckout() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': this.props.cookies.get('u_t')\r\n            },\r\n            body: JSON.stringify({cart: this.props.cart})\r\n        })\r\n        this.setState({success: false});\r\n    }\r\n\r\n    shipping() {\r\n        this.setState({shipping: true});\r\n    }\r\n    \r\n    // componentWillMount(){}\r\n    componentDidMount(){\r\n        let totalPrice = 0;\r\n        let totalItem = 0;\r\n        this.props.cart&&this.props.cart.map(item => totalPrice += item.quant*item.price);\r\n        this.props.cart&&this.props.cart.map(item => totalItem += item.quant*1);\r\n        this.setState({totalPrice});\r\n        this.setState({totalItem});\r\n    }\r\n    componentWillUnmount(){\r\n        if(!this.state.shipping){\r\n            fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/cart/return',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': this.props.cookies.get('u_t')\r\n                },\r\n                body: JSON.stringify({cart: this.props.cart})\r\n            })\r\n        }\r\n    }\r\n    // componentWillReceiveProps(){}\r\n\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        if(this.state.shipping){\r\n            return(<Redirect to='/shipping'/>);\r\n        }\r\n\r\n        if(this.state.success){\r\n            return(\r\n                <div className=\"Calculate\">\r\n                    <div className=\"order\">\r\n                        <button onClick={this.cancelCheckout} className=\"btn-order\">Trở lại</button>\r\n                    </div>\r\n                    <div className=\"order\">\r\n                        <button className=\"btn-order\" onClick={this.shipping}>Xác nhận</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if(this.state.redirect){\r\n            return(<Redirect to='/signin'/>);\r\n        }\r\n        return (\r\n            <div className=\"Calculate\">\r\n                <div className=\"calculated-money\">\r\n                    <div className=\"qua\">\r\n                        Tổng số sản phẩm: {this.state.totalItem}\r\n                    </div>\r\n                    <div className=\"prices-items\">\r\n                        Tạm tính: {this.state.totalPrice}\r\n                    </div>\r\n                    <div className=\"prices-total\">\r\n                        Thành tiền: {this.state.totalPrice}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"order\">\r\n                    <button className=\"btn-order\" onClick={this.order}>Tiến hành đặt hàng</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculate;","import React, { Component } from 'react';\r\nimport './ShoppingCartItem.css';\r\nimport Cookies from 'universal-cookie';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faTimes } from '@fortawesome/free-solid-svg-icons'\r\nclass ShoppingCartItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cookies: new Cookies(),\r\n        };\r\n        this.updateItemQuant = this.updateItemQuant.bind(this);\r\n        this.deleteBookfromCart = this.deleteBookfromCart.bind(this);\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    updateItemQuant(e){\r\n        const quant = e.target.value;\r\n        if(quant > 0){\r\n            let cart = this.state.cookies.get('shoppingCart');\r\n            for(let i=0;i<cart.length;i++){\r\n                if(cart[i].id === this.props.book.id){\r\n                    cart[i].quant = quant;\r\n                    break;\r\n                }\r\n            }\r\n            this.state.cookies.set('shoppingCart', cart);\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n    deleteBookfromCart(){\r\n        let cart = this.state.cookies.get('shoppingCart');\r\n        for(let i=0;i<cart.length;i++){\r\n            if(cart[i].id === this.props.book.id){\r\n                cart.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.state.cookies.set('shoppingCart', cart);\r\n        window.location.reload(false);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ShoppingCartItem\">\r\n                <div className=\"img\"><img width='100%' height='100%' src={`https://bbook-backend.herokuapp.com/`+this.props.book.image} alt={'booktitle'}/></div>\r\n                <div className=\"nameBook\">{this.props.book.name}</div>\r\n                <div className=\"comboPriceQual\">\r\n                <div className=\"bold\">Số lượng: <input onChange={this.updateItemQuant} min=\"1\" type=\"number\" className=\"input\" defaultValue={this.props.book.quant}/></div>\r\n                <div className=\"bold\">Đơn giá: <span className=\"red\">{this.props.book.price} đ</span> </div>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.deleteBookfromCart} className=\"btn-del\"><FontAwesomeIcon icon={faTimes}/></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCartItem;","import React, { Component } from 'react';\r\nimport './ShoppingCart.css';\r\nimport Calculate from './Calculate/Calculate';\r\nimport ShoppingCartItem from './ShoppingCartItem/ShoppingCartItem';\r\n\r\nclass ShoppingCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            cart: this.props.cookies.get('shoppingCart'),\r\n        };\r\n    }\r\n\r\n    // componentWillMount(){}\r\n    // componentDidMount(){}\r\n    // componentWillUnmount(){}\r\n\r\n    // componentWillReceiveProps(){}\r\n    // shouldComponentUpdate(){}\r\n    // componentWillUpdate(){}\r\n    // componentDidUpdate(){}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"ShoppingCart\">\r\n                    <h3 className=\"shopping-cart-title\">GIỎ HÀNG</h3>\r\n                    <div className=\"list-product\">\r\n                        {\r\n                            this.state.cart && this.state.cart.map(item => (\r\n                                <ShoppingCartItem key={item.id} book={item}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <Calculate cookies={this.props.cookies} cart={this.state.cart}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShoppingCart;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from '../HeaderBar/HeaderBar';\r\nimport SignIn from '../Auth/SignIn/SignIn';\r\nimport {\r\n    HashRouter,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport SignUp from '../Auth/SignUp/SignUp';\r\nimport Home from '../Home/Home';\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\nimport ResetPassword from '../ResetPassword/ResetPassword'\r\nimport Exchange from '../Exchange/Exchange';\r\nimport SearchBook from '../Home/SearchBook/SearchBook';\r\nimport SideBar from '../Home/SideBar/SideBar';\r\nimport Shipping from '../Home/Shipping/Shipping';\r\nimport BookDetail from '../Home/BookDetail/BookDetail';\r\nimport ShoppingCart from '../Home/ShoppingCart/ShoppingCart';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            isLogin: false,\r\n            cookies: new Cookies()\r\n        };\r\n        this.LoginLogout = this.LoginLogout.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://cors-anywhere.herokuapp.com/https://bbook-backend.herokuapp.com/category')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({categories: json.categories});\r\n        })\r\n    }\r\n\r\n    LoginLogout(isLogin) {\r\n        this.setState({isLogin});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"background-image\">\r\n                    <div className=\"background-content\">\r\n                        <HashRouter>\r\n                            <HeaderBar LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                            <Switch>\r\n                                <Route exact path='/signin' >\r\n                                    <SignIn LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/signup'>\r\n                                    <SignUp LoginLogout={(isLogin) => this.LoginLogout(isLogin)}/>\r\n                                </Route>\r\n                                <Route exact path='/reset/:tokenId'>\r\n                                    <ResetPassword/>\r\n                                </Route>\r\n                                <Route exact path='/exchange'>\r\n                                    <Exchange/>\r\n                                </Route>\r\n                                <Route exact path='/shoppingCart'>\r\n                                    <ShoppingCart cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path=\"/:categorieID/:bookId\">\r\n                                    <BookDetail cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path=\"/shipping\">\r\n                                    <Shipping cookies={this.state.cookies}/>\r\n                                </Route>\r\n                                <Route exact path='/search/:category/books'>\r\n                                    <div className='container'>\r\n                                        <SideBar categories={this.state.categories}/>\r\n                                        <SearchBook/>\r\n                                    </div>\r\n                                </Route>\r\n                                <Route exact path='/'>\r\n                                    <Home/>\r\n                                </Route>\r\n                                <Route component={ErrorPage}/>\r\n                            </Switch>\r\n                        </HashRouter>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/shoppingCart.891cbcab.png\";"],"sourceRoot":""}